<%-
method = locals[:method]
inout_data = method.parameters.last
 -%>
    public func <%= SwiftHelper.format_name(method.name) %>(<%= SwiftHelper.parameters(method.parameters[1...-1]) %>) -> Data {
        var result = Data(repeating: 0, count: <%= inout_data.type.size %>)
        <%- if method.return_type.name == :size -%>
        result.count = result.withUnsafeMutableBytes { ptr in
        <%- else -%>
        result.withUnsafeMutableBytes { ptr in
        <%- end -%>
        <%- if method.parameters.count > 2 -%>
            TW<%= @entity.name %><%= method.name %>(rawValue, <%= SwiftHelper.arguments(method.parameters[1...-1]) %>, ptr)
        <%- else -%>
            TW<%= @entity.name %><%= method.name %>(rawValue, ptr)
        <%- end -%>
        }
        return result
    }
