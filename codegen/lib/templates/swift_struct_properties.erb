    private var rawValue: TW<%= entity.name %>

<%- entity.properties.each do |property| -%>
    <%- if should_return_data(property) -%>
<%= render('swift_data_property.erb', { property: property }) %>
    <%- next end -%>
    public var <%= Swift.format_name(property.name) %>: <%= Swift.type(property.return_type) %> {
        <%- if property.return_type.is_class || property.return_type.is_struct -%>
        return <%= Swift.type(property.return_type) %>(rawValue: TW<%= entity.name %><%= property.name %>(rawValue))
        <%- else -%>
        return TW<%= entity.name %><%= property.name %>(rawValue)
        <%- end -%>
    }

<%- end -%>
    init(rawValue: TW<%= entity.name %>) {
        self.rawValue = rawValue
    }

<%- entity.static_methods.each do |method| -%>
    <%- next unless method.name.start_with?('Init') -%>
    public init(<%= Swift.parameters(method.parameters.drop(1)) %>) {
        rawValue = TW<%= entity.name %>()
        TW<%= entity.name %><%= method.name %>(rawValue, <%= Swift.arguments(method.parameters.drop(1)) %>)
    }

<%- end -%>