// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrustWalletCore.proto

package com.wallet.crypto.trustapp.proto;

public final class TrustWalletCore {
  private TrustWalletCore() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface BitcoinOutPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BitcoinOutPoint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bytes hash = 1;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>optional uint32 index = 2;</code>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code TW.proto.BitcoinOutPoint}
   */
  public  static final class BitcoinOutPoint extends
      com.google.protobuf.GeneratedMessageLite<
          BitcoinOutPoint, BitcoinOutPoint.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BitcoinOutPoint)
      BitcoinOutPointOrBuilder {
    private BitcoinOutPoint() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>optional bytes hash = 1;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }
    /**
     * <code>optional bytes hash = 1;</code>
     */
    private void setHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hash_ = value;
    }
    /**
     * <code>optional bytes hash = 1;</code>
     */
    private void clearHash() {
      
      hash_ = getDefaultInstance().getHash();
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <code>optional uint32 index = 2;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <code>optional uint32 index = 2;</code>
     */
    private void setIndex(int value) {
      
      index_ = value;
    }
    /**
     * <code>optional uint32 index = 2;</code>
     */
    private void clearIndex() {
      
      index_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!hash_.isEmpty()) {
        output.writeBytes(1, hash_);
      }
      if (index_ != 0) {
        output.writeUInt32(2, index_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, hash_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BitcoinOutPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BitcoinOutPoint)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPointOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bytes hash = 1;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return instance.getHash();
      }
      /**
       * <code>optional bytes hash = 1;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHash(value);
        return this;
      }
      /**
       * <code>optional bytes hash = 1;</code>
       */
      public Builder clearHash() {
        copyOnWrite();
        instance.clearHash();
        return this;
      }

      /**
       * <code>optional uint32 index = 2;</code>
       */
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>optional uint32 index = 2;</code>
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>optional uint32 index = 2;</code>
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BitcoinOutPoint)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint) arg1;
          hash_ = visitor.visitByteString(hash_ != com.google.protobuf.ByteString.EMPTY, hash_,
              other.hash_ != com.google.protobuf.ByteString.EMPTY, other.hash_);
          index_ = visitor.visitInt(index_ != 0, index_,
              other.index_ != 0, other.index_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  hash_ = input.readBytes();
                  break;
                }
                case 16: {

                  index_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BitcoinOutPoint)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BitcoinOutPoint();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BitcoinOutPoint> PARSER;

    public static com.google.protobuf.Parser<BitcoinOutPoint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BitcoinUnspentTransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BitcoinUnspentTransaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    boolean hasOutPoint();
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getOutPoint();

    /**
     * <code>optional bytes script = 2;</code>
     */
    com.google.protobuf.ByteString getScript();

    /**
     * <code>optional int64 amount = 3;</code>
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code TW.proto.BitcoinUnspentTransaction}
   */
  public  static final class BitcoinUnspentTransaction extends
      com.google.protobuf.GeneratedMessageLite<
          BitcoinUnspentTransaction, BitcoinUnspentTransaction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BitcoinUnspentTransaction)
      BitcoinUnspentTransactionOrBuilder {
    private BitcoinUnspentTransaction() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int OUT_POINT_FIELD_NUMBER = 1;
    private com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint outPoint_;
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    public boolean hasOutPoint() {
      return outPoint_ != null;
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getOutPoint() {
      return outPoint_ == null ? com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.getDefaultInstance() : outPoint_;
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void setOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      outPoint_ = value;
      
      }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void setOutPoint(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.Builder builderForValue) {
      outPoint_ = builderForValue.build();
      
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void mergeOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
      if (outPoint_ != null &&
          outPoint_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.getDefaultInstance()) {
        outPoint_ =
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.newBuilder(outPoint_).mergeFrom(value).buildPartial();
      } else {
        outPoint_ = value;
      }
      
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void clearOutPoint() {  outPoint_ = null;
      
    }

    public static final int SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString script_;
    /**
     * <code>optional bytes script = 2;</code>
     */
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }
    /**
     * <code>optional bytes script = 2;</code>
     */
    private void setScript(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      script_ = value;
    }
    /**
     * <code>optional bytes script = 2;</code>
     */
    private void clearScript() {
      
      script_ = getDefaultInstance().getScript();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <code>optional int64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }
    /**
     * <code>optional int64 amount = 3;</code>
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <code>optional int64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (outPoint_ != null) {
        output.writeMessage(1, getOutPoint());
      }
      if (!script_.isEmpty()) {
        output.writeBytes(2, script_);
      }
      if (amount_ != 0L) {
        output.writeInt64(3, amount_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (outPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOutPoint());
      }
      if (!script_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, script_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, amount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BitcoinUnspentTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BitcoinUnspentTransaction)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransactionOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public boolean hasOutPoint() {
        return instance.hasOutPoint();
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getOutPoint() {
        return instance.getOutPoint();
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
        copyOnWrite();
        instance.setOutPoint(value);
        return this;
        }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setOutPoint(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder mergeOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
        copyOnWrite();
        instance.mergeOutPoint(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder clearOutPoint() {  copyOnWrite();
        instance.clearOutPoint();
        return this;
      }

      /**
       * <code>optional bytes script = 2;</code>
       */
      public com.google.protobuf.ByteString getScript() {
        return instance.getScript();
      }
      /**
       * <code>optional bytes script = 2;</code>
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setScript(value);
        return this;
      }
      /**
       * <code>optional bytes script = 2;</code>
       */
      public Builder clearScript() {
        copyOnWrite();
        instance.clearScript();
        return this;
      }

      /**
       * <code>optional int64 amount = 3;</code>
       */
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BitcoinUnspentTransaction)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction) arg1;
          outPoint_ = visitor.visitMessage(outPoint_, other.outPoint_);
          script_ = visitor.visitByteString(script_ != com.google.protobuf.ByteString.EMPTY, script_,
              other.script_ != com.google.protobuf.ByteString.EMPTY, other.script_);
          amount_ = visitor.visitLong(amount_ != 0L, amount_,
              other.amount_ != 0L, other.amount_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.Builder subBuilder = null;
                  if (outPoint_ != null) {
                    subBuilder = outPoint_.toBuilder();
                  }
                  outPoint_ = input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(outPoint_);
                    outPoint_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {

                  script_ = input.readBytes();
                  break;
                }
                case 24: {

                  amount_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BitcoinUnspentTransaction)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BitcoinUnspentTransaction();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BitcoinUnspentTransaction> PARSER;

    public static com.google.protobuf.Parser<BitcoinUnspentTransaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BitcoinSigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BitcoinSigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    int getHashType();

    /**
     * <code>optional int64 amount = 2;</code>
     */
    long getAmount();

    /**
     * <code>optional string to_address = 3;</code>
     */
    java.lang.String getToAddress();
    /**
     * <code>optional string to_address = 3;</code>
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <code>optional string change_address = 4;</code>
     */
    java.lang.String getChangeAddress();
    /**
     * <code>optional string change_address = 4;</code>
     */
    com.google.protobuf.ByteString
        getChangeAddressBytes();

    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getPrivateKeyList();
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    int getPrivateKeyCount();
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    com.google.protobuf.ByteString getPrivateKey(int index);

    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    int getScriptsCount();
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    boolean containsScripts(
        java.lang.String key);
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getScripts();
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getScriptsMap();
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    com.google.protobuf.ByteString getScriptsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    com.google.protobuf.ByteString getScriptsOrThrow(
        java.lang.String key);

    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> 
        getUtxoList();
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getUtxo(int index);
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    int getUtxoCount();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.proto.BitcoinSigningInput}
   */
  public  static final class BitcoinSigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          BitcoinSigningInput, BitcoinSigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BitcoinSigningInput)
      BitcoinSigningInputOrBuilder {
    private BitcoinSigningInput() {
      toAddress_ = "";
      changeAddress_ = "";
      privateKey_ = emptyProtobufList();
      utxo_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int HASH_TYPE_FIELD_NUMBER = 1;
    private int hashType_;
    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    public int getHashType() {
      return hashType_;
    }
    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    private void setHashType(int value) {
      
      hashType_ = value;
    }
    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    private void clearHashType() {
      
      hashType_ = 0;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <code>optional int64 amount = 2;</code>
     */
    public long getAmount() {
      return amount_;
    }
    /**
     * <code>optional int64 amount = 2;</code>
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <code>optional int64 amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 3;
    private java.lang.String toAddress_;
    /**
     * <code>optional string to_address = 3;</code>
     */
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    private void setToAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      toAddress_ = value;
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      toAddress_ = value.toStringUtf8();
    }

    public static final int CHANGE_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.String changeAddress_;
    /**
     * <code>optional string change_address = 4;</code>
     */
    public java.lang.String getChangeAddress() {
      return changeAddress_;
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChangeAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(changeAddress_);
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    private void setChangeAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      changeAddress_ = value;
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    private void clearChangeAddress() {
      
      changeAddress_ = getDefaultInstance().getChangeAddress();
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    private void setChangeAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      changeAddress_ = value.toStringUtf8();
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> privateKey_;
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPrivateKeyList() {
      return privateKey_;
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    public int getPrivateKeyCount() {
      return privateKey_.size();
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    public com.google.protobuf.ByteString getPrivateKey(int index) {
      return privateKey_.get(index);
    }
    private void ensurePrivateKeyIsMutable() {
      if (!privateKey_.isModifiable()) {
        privateKey_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(privateKey_);
       }
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void setPrivateKey(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePrivateKeyIsMutable();
      privateKey_.set(index, value);
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void addPrivateKey(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePrivateKeyIsMutable();
      privateKey_.add(value);
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void addAllPrivateKey(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensurePrivateKeyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, privateKey_);
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void clearPrivateKey() {
      privateKey_ = emptyProtobufList();
    }

    public static final int SCRIPTS_FIELD_NUMBER = 11;
    private static final class ScriptsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, com.google.protobuf.ByteString> scripts_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, com.google.protobuf.ByteString>
    internalGetScripts() {
      return scripts_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, com.google.protobuf.ByteString>
    internalGetMutableScripts() {
      if (!scripts_.isMutable()) {
        scripts_ = scripts_.mutableCopy();
      }
      return scripts_;
    }

    public int getScriptsCount() {
      return internalGetScripts().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public boolean containsScripts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetScripts().containsKey(key);
    }
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScripts() {
      return getScriptsMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScriptsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetScripts());
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public com.google.protobuf.ByteString getScriptsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetScripts();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public com.google.protobuf.ByteString getScriptsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetScripts();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    private java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getMutableScriptsMap() {
      return internalGetMutableScripts();
    }

    public static final int UTXO_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.ProtobufList<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> utxo_;
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> getUtxoList() {
      return utxo_;
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public java.util.List<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransactionOrBuilder> 
        getUtxoOrBuilderList() {
      return utxo_;
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public int getUtxoCount() {
      return utxo_.size();
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getUtxo(int index) {
      return utxo_.get(index);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransactionOrBuilder getUtxoOrBuilder(
        int index) {
      return utxo_.get(index);
    }
    private void ensureUtxoIsMutable() {
      if (!utxo_.isModifiable()) {
        utxo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(utxo_);
       }
    }

    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void setUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUtxoIsMutable();
      utxo_.set(index, value);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void setUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
      ensureUtxoIsMutable();
      utxo_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUtxoIsMutable();
      utxo_.add(value);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUtxoIsMutable();
      utxo_.add(index, value);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
      ensureUtxoIsMutable();
      utxo_.add(builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
      ensureUtxoIsMutable();
      utxo_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addAllUtxo(
        java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> values) {
      ensureUtxoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, utxo_);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void clearUtxo() {
      utxo_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void removeUtxo(int index) {
      ensureUtxoIsMutable();
      utxo_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hashType_ != 0) {
        output.writeUInt32(1, hashType_);
      }
      if (amount_ != 0L) {
        output.writeInt64(2, amount_);
      }
      if (!toAddress_.isEmpty()) {
        output.writeString(3, getToAddress());
      }
      if (!changeAddress_.isEmpty()) {
        output.writeString(4, getChangeAddress());
      }
      for (int i = 0; i < privateKey_.size(); i++) {
        output.writeBytes(10, privateKey_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetScripts().entrySet()) {
        ScriptsDefaultEntryHolder.defaultEntry.serializeTo(
            output, 11, entry.getKey(), entry.getValue());
      }
      for (int i = 0; i < utxo_.size(); i++) {
        output.writeMessage(12, utxo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hashType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, hashType_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, amount_);
      }
      if (!toAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getToAddress());
      }
      if (!changeAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getChangeAddress());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < privateKey_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(privateKey_.get(i));
        }
        size += dataSize;
        size += 1 * getPrivateKeyList().size();
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetScripts().entrySet()) {
        size += ScriptsDefaultEntryHolder.defaultEntry.computeMessageSize(
          11, entry.getKey(), entry.getValue());
      }
      for (int i = 0; i < utxo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, utxo_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.proto.BitcoinSigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BitcoinSigningInput)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInputOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 hash_type = 1;</code>
       */
      public int getHashType() {
        return instance.getHashType();
      }
      /**
       * <code>optional uint32 hash_type = 1;</code>
       */
      public Builder setHashType(int value) {
        copyOnWrite();
        instance.setHashType(value);
        return this;
      }
      /**
       * <code>optional uint32 hash_type = 1;</code>
       */
      public Builder clearHashType() {
        copyOnWrite();
        instance.clearHashType();
        return this;
      }

      /**
       * <code>optional int64 amount = 2;</code>
       */
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>optional int64 amount = 2;</code>
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <code>optional int64 amount = 2;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <code>optional string to_address = 3;</code>
       */
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <code>optional string change_address = 4;</code>
       */
      public java.lang.String getChangeAddress() {
        return instance.getChangeAddress();
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChangeAddressBytes() {
        return instance.getChangeAddressBytes();
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public Builder setChangeAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setChangeAddress(value);
        return this;
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public Builder clearChangeAddress() {
        copyOnWrite();
        instance.clearChangeAddress();
        return this;
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public Builder setChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChangeAddressBytes(value);
        return this;
      }

      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPrivateKeyList() {
        return java.util.Collections.unmodifiableList(
            instance.getPrivateKeyList());
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public int getPrivateKeyCount() {
        return instance.getPrivateKeyCount();
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public com.google.protobuf.ByteString getPrivateKey(int index) {
        return instance.getPrivateKey(index);
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder setPrivateKey(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(index, value);
        return this;
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder addPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addPrivateKey(value);
        return this;
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder addAllPrivateKey(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllPrivateKey(values);
        return this;
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }


      public int getScriptsCount() {
        return instance.getScriptsMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public boolean containsScripts(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return instance.getScriptsMap().containsKey(key);
      }

      public Builder clearScripts() {
        copyOnWrite();
        instance.getMutableScriptsMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public Builder removeScripts(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableScriptsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getScriptsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScripts() {
        return getScriptsMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScriptsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getScriptsMap());
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public com.google.protobuf.ByteString getScriptsOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            instance.getScriptsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public com.google.protobuf.ByteString getScriptsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            instance.getScriptsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public Builder putScripts(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableScriptsMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public Builder putAllScripts(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.getMutableScriptsMap().putAll(values);
        return this;
      }

      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> getUtxoList() {
        return java.util.Collections.unmodifiableList(
            instance.getUtxoList());
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public int getUtxoCount() {
        return instance.getUtxoCount();
      }/**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getUtxo(int index) {
        return instance.getUtxo(index);
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder setUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
        copyOnWrite();
        instance.setUtxo(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder setUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
        copyOnWrite();
        instance.setUtxo(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
        copyOnWrite();
        instance.addUtxo(value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
        copyOnWrite();
        instance.addUtxo(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxo(builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxo(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addAllUtxo(
          java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> values) {
        copyOnWrite();
        instance.addAllUtxo(values);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder clearUtxo() {
        copyOnWrite();
        instance.clearUtxo();
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder removeUtxo(int index) {
        copyOnWrite();
        instance.removeUtxo(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BitcoinSigningInput)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          privateKey_.makeImmutable();
          scripts_.makeImmutable();
          utxo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput) arg1;
          hashType_ = visitor.visitInt(hashType_ != 0, hashType_,
              other.hashType_ != 0, other.hashType_);
          amount_ = visitor.visitLong(amount_ != 0L, amount_,
              other.amount_ != 0L, other.amount_);
          toAddress_ = visitor.visitString(!toAddress_.isEmpty(), toAddress_,
              !other.toAddress_.isEmpty(), other.toAddress_);
          changeAddress_ = visitor.visitString(!changeAddress_.isEmpty(), changeAddress_,
              !other.changeAddress_.isEmpty(), other.changeAddress_);
          privateKey_= visitor.visitList(privateKey_, other.privateKey_);
          scripts_ = visitor.visitMap(
              scripts_, other.internalGetScripts());
          utxo_= visitor.visitList(utxo_, other.utxo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  hashType_ = input.readUInt32();
                  break;
                }
                case 16: {

                  amount_ = input.readInt64();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  toAddress_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  changeAddress_ = s;
                  break;
                }
                case 82: {
                  if (!privateKey_.isModifiable()) {
                    privateKey_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(privateKey_);
                  }
                  privateKey_.add(input.readBytes());
                  break;
                }
                case 90: {
                  if (!scripts_.isMutable()) {
                    scripts_ = scripts_.mutableCopy();
                  }
                  ScriptsDefaultEntryHolder.defaultEntry.parseInto(scripts_, input, extensionRegistry);  break;
                }
                case 98: {
                  if (!utxo_.isModifiable()) {
                    utxo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(utxo_);
                  }
                  utxo_.add(
                      input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BitcoinSigningInput)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BitcoinSigningInput();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BitcoinSigningInput> PARSER;

    public static com.google.protobuf.Parser<BitcoinSigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceTransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceTransaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getMsgsList();
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    int getMsgsCount();
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    com.google.protobuf.ByteString getMsgs(int index);

    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getSignaturesList();
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    int getSignaturesCount();
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    com.google.protobuf.ByteString getSignatures(int index);

    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    java.lang.String getMemo();
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    com.google.protobuf.ByteString
        getMemoBytes();

    /**
     * <pre>
     * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>optional sint64 source = 4;</code>
     */
    long getSource();

    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceTransaction}
   */
  public  static final class BinanceTransaction extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceTransaction, BinanceTransaction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceTransaction)
      BinanceTransactionOrBuilder {
    private BinanceTransaction() {
      msgs_ = emptyProtobufList();
      signatures_ = emptyProtobufList();
      memo_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int MSGS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> msgs_;
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getMsgsList() {
      return msgs_;
    }
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    public int getMsgsCount() {
      return msgs_.size();
    }
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    public com.google.protobuf.ByteString getMsgs(int index) {
      return msgs_.get(index);
    }
    private void ensureMsgsIsMutable() {
      if (!msgs_.isModifiable()) {
        msgs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(msgs_);
       }
    }
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    private void setMsgs(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMsgsIsMutable();
      msgs_.set(index, value);
    }
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    private void addMsgs(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMsgsIsMutable();
      msgs_.add(value);
    }
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    private void addAllMsgs(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureMsgsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, msgs_);
    }
    /**
     * <pre>
     * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
     * 0xF0625DEE                  // prefix
     * </pre>
     *
     * <code>repeated bytes msgs = 1;</code>
     */
    private void clearMsgs() {
      msgs_ = emptyProtobufList();
    }

    public static final int SIGNATURES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> signatures_;
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    public com.google.protobuf.ByteString getSignatures(int index) {
      return signatures_.get(index);
    }
    private void ensureSignaturesIsMutable() {
      if (!signatures_.isModifiable()) {
        signatures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(signatures_);
       }
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void setSignatures(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureSignaturesIsMutable();
      signatures_.set(index, value);
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void addSignatures(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureSignaturesIsMutable();
      signatures_.add(value);
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void addAllSignatures(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureSignaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, signatures_);
    }
    /**
     * <pre>
     * array of size 1, containing the standard signature structure of the transaction sender
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void clearSignatures() {
      signatures_ = emptyProtobufList();
    }

    public static final int MEMO_FIELD_NUMBER = 3;
    private java.lang.String memo_;
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    public java.lang.String getMemo() {
      return memo_;
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMemoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(memo_);
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    private void setMemo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      memo_ = value;
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    private void clearMemo() {
      
      memo_ = getDefaultInstance().getMemo();
    }
    /**
     * <pre>
     * a short sentence of remark for the transaction, only for `Transfer` transactions.
     * </pre>
     *
     * <code>optional string memo = 3;</code>
     */
    private void setMemoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      memo_ = value.toStringUtf8();
    }

    public static final int SOURCE_FIELD_NUMBER = 4;
    private long source_;
    /**
     * <pre>
     * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>optional sint64 source = 4;</code>
     */
    public long getSource() {
      return source_;
    }
    /**
     * <pre>
     * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>optional sint64 source = 4;</code>
     */
    private void setSource(long value) {
      
      source_ = value;
    }
    /**
     * <pre>
     * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
     * </pre>
     *
     * <code>optional sint64 source = 4;</code>
     */
    private void clearSource() {
      
      source_ = 0L;
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      data_ = value;
    }
    /**
     * <pre>
     * reserved for future use
     * </pre>
     *
     * <code>optional bytes data = 5;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < msgs_.size(); i++) {
        output.writeBytes(1, msgs_.get(i));
      }
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeBytes(2, signatures_.get(i));
      }
      if (!memo_.isEmpty()) {
        output.writeString(3, getMemo());
      }
      if (source_ != 0L) {
        output.writeSInt64(4, source_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(5, data_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < msgs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(msgs_.get(i));
        }
        size += dataSize;
        size += 1 * getMsgsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < signatures_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(signatures_.get(i));
        }
        size += dataSize;
        size += 1 * getSignaturesList().size();
      }
      if (!memo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMemo());
      }
      if (source_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(4, source_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, data_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceTransaction)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransactionOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getMsgsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMsgsList());
      }
      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public int getMsgsCount() {
        return instance.getMsgsCount();
      }
      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public com.google.protobuf.ByteString getMsgs(int index) {
        return instance.getMsgs(index);
      }
      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public Builder setMsgs(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMsgs(index, value);
        return this;
      }
      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public Builder addMsgs(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addMsgs(value);
        return this;
      }
      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public Builder addAllMsgs(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllMsgs(values);
        return this;
      }
      /**
       * <pre>
       * uint64 SIZE-OF-ENCODED      // varint encoded length of the structure after encoding
       * 0xF0625DEE                  // prefix
       * </pre>
       *
       * <code>repeated bytes msgs = 1;</code>
       */
      public Builder clearMsgs() {
        copyOnWrite();
        instance.clearMsgs();
        return this;
      }

      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getSignaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getSignaturesList());
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public int getSignaturesCount() {
        return instance.getSignaturesCount();
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public com.google.protobuf.ByteString getSignatures(int index) {
        return instance.getSignatures(index);
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder setSignatures(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignatures(index, value);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder addSignatures(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addSignatures(value);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllSignatures(values);
        return this;
      }
      /**
       * <pre>
       * array of size 1, containing the standard signature structure of the transaction sender
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder clearSignatures() {
        copyOnWrite();
        instance.clearSignatures();
        return this;
      }

      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>optional string memo = 3;</code>
       */
      public java.lang.String getMemo() {
        return instance.getMemo();
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>optional string memo = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMemoBytes() {
        return instance.getMemoBytes();
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>optional string memo = 3;</code>
       */
      public Builder setMemo(
          java.lang.String value) {
        copyOnWrite();
        instance.setMemo(value);
        return this;
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>optional string memo = 3;</code>
       */
      public Builder clearMemo() {
        copyOnWrite();
        instance.clearMemo();
        return this;
      }
      /**
       * <pre>
       * a short sentence of remark for the transaction, only for `Transfer` transactions.
       * </pre>
       *
       * <code>optional string memo = 3;</code>
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMemoBytes(value);
        return this;
      }

      /**
       * <pre>
       * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
       * </pre>
       *
       * <code>optional sint64 source = 4;</code>
       */
      public long getSource() {
        return instance.getSource();
      }
      /**
       * <pre>
       * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
       * </pre>
       *
       * <code>optional sint64 source = 4;</code>
       */
      public Builder setSource(long value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <pre>
       * an identifier for tools triggerring this transaction, set to zero if unwilling to disclose.
       * </pre>
       *
       * <code>optional sint64 source = 4;</code>
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }

      /**
       * <pre>
       * reserved for future use
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * reserved for future use
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * reserved for future use
       * </pre>
       *
       * <code>optional bytes data = 5;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceTransaction)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          msgs_.makeImmutable();
          signatures_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction) arg1;
          msgs_= visitor.visitList(msgs_, other.msgs_);
          signatures_= visitor.visitList(signatures_, other.signatures_);
          memo_ = visitor.visitString(!memo_.isEmpty(), memo_,
              !other.memo_.isEmpty(), other.memo_);
          source_ = visitor.visitLong(source_ != 0L, source_,
              other.source_ != 0L, other.source_);
          data_ = visitor.visitByteString(data_ != com.google.protobuf.ByteString.EMPTY, data_,
              other.data_ != com.google.protobuf.ByteString.EMPTY, other.data_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!msgs_.isModifiable()) {
                    msgs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(msgs_);
                  }
                  msgs_.add(input.readBytes());
                  break;
                }
                case 18: {
                  if (!signatures_.isModifiable()) {
                    signatures_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(signatures_);
                  }
                  signatures_.add(input.readBytes());
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  memo_ = s;
                  break;
                }
                case 32: {

                  source_ = input.readSInt64();
                  break;
                }
                case 42: {

                  data_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceTransaction)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceTransaction();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTransaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceTransaction> PARSER;

    public static com.google.protobuf.Parser<BinanceTransaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSignature)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>optional bytes pub_key = 1;</code>
     */
    com.google.protobuf.ByteString getPubKey();

    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>optional sint64 account_number = 3;</code>
     */
    long getAccountNumber();

    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>optional sint64 sequence = 4;</code>
     */
    long getSequence();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceSignature}
   */
  public  static final class BinanceSignature extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceSignature, BinanceSignature.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceSignature)
      BinanceSignatureOrBuilder {
    private BinanceSignature() {
      pubKey_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    public interface PubKeyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSignature.PubKey)
        com.google.protobuf.MessageLiteOrBuilder {
    }
    /**
     * <pre>
     * 0xEB5AE987          // prefix
     * bytes               // public key bytes
     * </pre>
     *
     * Protobuf type {@code TW.proto.BinanceSignature.PubKey}
     */
    public  static final class PubKey extends
        com.google.protobuf.GeneratedMessageLite<
            PubKey, PubKey.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.proto.BinanceSignature.PubKey)
        PubKeyOrBuilder {
      private PubKey() {
      }
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        memoizedSerializedSize = size;
        return size;
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * 0xEB5AE987          // prefix
       * bytes               // public key bytes
       * </pre>
       *
       * Protobuf type {@code TW.proto.BinanceSignature.PubKey}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSignature.PubKey)
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKeyOrBuilder {
        // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSignature.PubKey)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey) arg1;
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.proto.BinanceSignature.PubKey)
      private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new PubKey();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.PubKey getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PubKey> PARSER;

      public static com.google.protobuf.Parser<PubKey> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int PUB_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pubKey_;
    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>optional bytes pub_key = 1;</code>
     */
    public com.google.protobuf.ByteString getPubKey() {
      return pubKey_;
    }
    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>optional bytes pub_key = 1;</code>
     */
    private void setPubKey(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pubKey_ = value;
    }
    /**
     * <pre>
     * public key bytes of the signer address
     * </pre>
     *
     * <code>optional bytes pub_key = 1;</code>
     */
    private void clearPubKey() {
      
      pubKey_ = getDefaultInstance().getPubKey();
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }
    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    private void setSignature(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      signature_ = value;
    }
    /**
     * <pre>
     * signature bytes, please check chain access section for signature generation
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    private void clearSignature() {
      
      signature_ = getDefaultInstance().getSignature();
    }

    public static final int ACCOUNT_NUMBER_FIELD_NUMBER = 3;
    private long accountNumber_;
    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>optional sint64 account_number = 3;</code>
     */
    public long getAccountNumber() {
      return accountNumber_;
    }
    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>optional sint64 account_number = 3;</code>
     */
    private void setAccountNumber(long value) {
      
      accountNumber_ = value;
    }
    /**
     * <pre>
     * another identifier of signer, which can be read from chain by account REST API or RPC
     * </pre>
     *
     * <code>optional sint64 account_number = 3;</code>
     */
    private void clearAccountNumber() {
      
      accountNumber_ = 0L;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 4;
    private long sequence_;
    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>optional sint64 sequence = 4;</code>
     */
    public long getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>optional sint64 sequence = 4;</code>
     */
    private void setSequence(long value) {
      
      sequence_ = value;
    }
    /**
     * <pre>
     * sequence number for the next transaction
     * </pre>
     *
     * <code>optional sint64 sequence = 4;</code>
     */
    private void clearSequence() {
      
      sequence_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pubKey_.isEmpty()) {
        output.writeBytes(1, pubKey_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(2, signature_);
      }
      if (accountNumber_ != 0L) {
        output.writeSInt64(3, accountNumber_);
      }
      if (sequence_ != 0L) {
        output.writeSInt64(4, sequence_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!pubKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pubKey_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      if (accountNumber_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, accountNumber_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(4, sequence_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSignature)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignatureOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * public key bytes of the signer address
       * </pre>
       *
       * <code>optional bytes pub_key = 1;</code>
       */
      public com.google.protobuf.ByteString getPubKey() {
        return instance.getPubKey();
      }
      /**
       * <pre>
       * public key bytes of the signer address
       * </pre>
       *
       * <code>optional bytes pub_key = 1;</code>
       */
      public Builder setPubKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPubKey(value);
        return this;
      }
      /**
       * <pre>
       * public key bytes of the signer address
       * </pre>
       *
       * <code>optional bytes pub_key = 1;</code>
       */
      public Builder clearPubKey() {
        copyOnWrite();
        instance.clearPubKey();
        return this;
      }

      /**
       * <pre>
       * signature bytes, please check chain access section for signature generation
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return instance.getSignature();
      }
      /**
       * <pre>
       * signature bytes, please check chain access section for signature generation
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignature(value);
        return this;
      }
      /**
       * <pre>
       * signature bytes, please check chain access section for signature generation
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public Builder clearSignature() {
        copyOnWrite();
        instance.clearSignature();
        return this;
      }

      /**
       * <pre>
       * another identifier of signer, which can be read from chain by account REST API or RPC
       * </pre>
       *
       * <code>optional sint64 account_number = 3;</code>
       */
      public long getAccountNumber() {
        return instance.getAccountNumber();
      }
      /**
       * <pre>
       * another identifier of signer, which can be read from chain by account REST API or RPC
       * </pre>
       *
       * <code>optional sint64 account_number = 3;</code>
       */
      public Builder setAccountNumber(long value) {
        copyOnWrite();
        instance.setAccountNumber(value);
        return this;
      }
      /**
       * <pre>
       * another identifier of signer, which can be read from chain by account REST API or RPC
       * </pre>
       *
       * <code>optional sint64 account_number = 3;</code>
       */
      public Builder clearAccountNumber() {
        copyOnWrite();
        instance.clearAccountNumber();
        return this;
      }

      /**
       * <pre>
       * sequence number for the next transaction
       * </pre>
       *
       * <code>optional sint64 sequence = 4;</code>
       */
      public long getSequence() {
        return instance.getSequence();
      }
      /**
       * <pre>
       * sequence number for the next transaction
       * </pre>
       *
       * <code>optional sint64 sequence = 4;</code>
       */
      public Builder setSequence(long value) {
        copyOnWrite();
        instance.setSequence(value);
        return this;
      }
      /**
       * <pre>
       * sequence number for the next transaction
       * </pre>
       *
       * <code>optional sint64 sequence = 4;</code>
       */
      public Builder clearSequence() {
        copyOnWrite();
        instance.clearSequence();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSignature)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature) arg1;
          pubKey_ = visitor.visitByteString(pubKey_ != com.google.protobuf.ByteString.EMPTY, pubKey_,
              other.pubKey_ != com.google.protobuf.ByteString.EMPTY, other.pubKey_);
          signature_ = visitor.visitByteString(signature_ != com.google.protobuf.ByteString.EMPTY, signature_,
              other.signature_ != com.google.protobuf.ByteString.EMPTY, other.signature_);
          accountNumber_ = visitor.visitLong(accountNumber_ != 0L, accountNumber_,
              other.accountNumber_ != 0L, other.accountNumber_);
          sequence_ = visitor.visitLong(sequence_ != 0L, sequence_,
              other.sequence_ != 0L, other.sequence_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  pubKey_ = input.readBytes();
                  break;
                }
                case 18: {

                  signature_ = input.readBytes();
                  break;
                }
                case 24: {

                  accountNumber_ = input.readSInt64();
                  break;
                }
                case 32: {

                  sequence_ = input.readSInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceSignature)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceSignature();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceSignature> PARSER;

    public static com.google.protobuf.Parser<BinanceSignature> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceTradeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceTradeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 0xCE6DC043           // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    com.google.protobuf.ByteString getSender();

    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>optional sint64 ordertype = 4;</code>
     */
    long getOrdertype();

    /**
     * <pre>
     * 1 for buy and 2 fory sell
     * </pre>
     *
     * <code>optional sint64 side = 5;</code>
     */
    long getSide();

    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 price = 6;</code>
     */
    long getPrice();

    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 quantity = 7;</code>
     */
    long getQuantity();

    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>optional sint64 timeinforce = 8;</code>
     */
    long getTimeinforce();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceTradeOrder}
   */
  public  static final class BinanceTradeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceTradeOrder, BinanceTradeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceTradeOrder)
      BinanceTradeOrderOrBuilder {
    private BinanceTradeOrder() {
      sender_ = com.google.protobuf.ByteString.EMPTY;
      id_ = "";
      symbol_ = "";
    }
    public static final int SENDER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sender_;
    /**
     * <pre>
     * 0xCE6DC043           // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    public com.google.protobuf.ByteString getSender() {
      return sender_;
    }
    /**
     * <pre>
     * 0xCE6DC043           // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    private void setSender(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sender_ = value;
    }
    /**
     * <pre>
     * 0xCE6DC043           // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    private void clearSender() {
      
      sender_ = getDefaultInstance().getSender();
    }

    public static final int ID_FIELD_NUMBER = 2;
    private java.lang.String id_;
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    public java.lang.String getId() {
      return id_;
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    private void setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    private void clearId() {
      
      id_ = getDefaultInstance().getId();
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 2;</code>
     */
    private void setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value.toStringUtf8();
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    private java.lang.String symbol_;
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    private void setSymbol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      symbol_ = value;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 3;</code>
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      symbol_ = value.toStringUtf8();
    }

    public static final int ORDERTYPE_FIELD_NUMBER = 4;
    private long ordertype_;
    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>optional sint64 ordertype = 4;</code>
     */
    public long getOrdertype() {
      return ordertype_;
    }
    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>optional sint64 ordertype = 4;</code>
     */
    private void setOrdertype(long value) {
      
      ordertype_ = value;
    }
    /**
     * <pre>
     * only accept 2 for now, meaning limit order
     * </pre>
     *
     * <code>optional sint64 ordertype = 4;</code>
     */
    private void clearOrdertype() {
      
      ordertype_ = 0L;
    }

    public static final int SIDE_FIELD_NUMBER = 5;
    private long side_;
    /**
     * <pre>
     * 1 for buy and 2 fory sell
     * </pre>
     *
     * <code>optional sint64 side = 5;</code>
     */
    public long getSide() {
      return side_;
    }
    /**
     * <pre>
     * 1 for buy and 2 fory sell
     * </pre>
     *
     * <code>optional sint64 side = 5;</code>
     */
    private void setSide(long value) {
      
      side_ = value;
    }
    /**
     * <pre>
     * 1 for buy and 2 fory sell
     * </pre>
     *
     * <code>optional sint64 side = 5;</code>
     */
    private void clearSide() {
      
      side_ = 0L;
    }

    public static final int PRICE_FIELD_NUMBER = 6;
    private long price_;
    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 price = 6;</code>
     */
    public long getPrice() {
      return price_;
    }
    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 price = 6;</code>
     */
    private void setPrice(long value) {
      
      price_ = value;
    }
    /**
     * <pre>
     * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 price = 6;</code>
     */
    private void clearPrice() {
      
      price_ = 0L;
    }

    public static final int QUANTITY_FIELD_NUMBER = 7;
    private long quantity_;
    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 quantity = 7;</code>
     */
    public long getQuantity() {
      return quantity_;
    }
    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 quantity = 7;</code>
     */
    private void setQuantity(long value) {
      
      quantity_ = value;
    }
    /**
     * <pre>
     * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
     * </pre>
     *
     * <code>optional sint64 quantity = 7;</code>
     */
    private void clearQuantity() {
      
      quantity_ = 0L;
    }

    public static final int TIMEINFORCE_FIELD_NUMBER = 8;
    private long timeinforce_;
    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>optional sint64 timeinforce = 8;</code>
     */
    public long getTimeinforce() {
      return timeinforce_;
    }
    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>optional sint64 timeinforce = 8;</code>
     */
    private void setTimeinforce(long value) {
      
      timeinforce_ = value;
    }
    /**
     * <pre>
     * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
     * </pre>
     *
     * <code>optional sint64 timeinforce = 8;</code>
     */
    private void clearTimeinforce() {
      
      timeinforce_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!sender_.isEmpty()) {
        output.writeBytes(1, sender_);
      }
      if (!id_.isEmpty()) {
        output.writeString(2, getId());
      }
      if (!symbol_.isEmpty()) {
        output.writeString(3, getSymbol());
      }
      if (ordertype_ != 0L) {
        output.writeSInt64(4, ordertype_);
      }
      if (side_ != 0L) {
        output.writeSInt64(5, side_);
      }
      if (price_ != 0L) {
        output.writeSInt64(6, price_);
      }
      if (quantity_ != 0L) {
        output.writeSInt64(7, quantity_);
      }
      if (timeinforce_ != 0L) {
        output.writeSInt64(8, timeinforce_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!sender_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, sender_);
      }
      if (!id_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getId());
      }
      if (!symbol_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getSymbol());
      }
      if (ordertype_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(4, ordertype_);
      }
      if (side_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, side_);
      }
      if (price_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(6, price_);
      }
      if (quantity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, quantity_);
      }
      if (timeinforce_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, timeinforce_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceTradeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceTradeOrder)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrderOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 0xCE6DC043           // prefix
       * </pre>
       *
       * <code>optional bytes sender = 1;</code>
       */
      public com.google.protobuf.ByteString getSender() {
        return instance.getSender();
      }
      /**
       * <pre>
       * 0xCE6DC043           // prefix
       * </pre>
       *
       * <code>optional bytes sender = 1;</code>
       */
      public Builder setSender(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSender(value);
        return this;
      }
      /**
       * <pre>
       * 0xCE6DC043           // prefix
       * </pre>
       *
       * <code>optional bytes sender = 1;</code>
       */
      public Builder clearSender() {
        copyOnWrite();
        instance.clearSender();
        return this;
      }

      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 2;</code>
       */
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 2;</code>
       */
      public Builder setId(
          java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 2;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 2;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 3;</code>
       */
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 3;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 3;</code>
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 3;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * only accept 2 for now, meaning limit order
       * </pre>
       *
       * <code>optional sint64 ordertype = 4;</code>
       */
      public long getOrdertype() {
        return instance.getOrdertype();
      }
      /**
       * <pre>
       * only accept 2 for now, meaning limit order
       * </pre>
       *
       * <code>optional sint64 ordertype = 4;</code>
       */
      public Builder setOrdertype(long value) {
        copyOnWrite();
        instance.setOrdertype(value);
        return this;
      }
      /**
       * <pre>
       * only accept 2 for now, meaning limit order
       * </pre>
       *
       * <code>optional sint64 ordertype = 4;</code>
       */
      public Builder clearOrdertype() {
        copyOnWrite();
        instance.clearOrdertype();
        return this;
      }

      /**
       * <pre>
       * 1 for buy and 2 fory sell
       * </pre>
       *
       * <code>optional sint64 side = 5;</code>
       */
      public long getSide() {
        return instance.getSide();
      }
      /**
       * <pre>
       * 1 for buy and 2 fory sell
       * </pre>
       *
       * <code>optional sint64 side = 5;</code>
       */
      public Builder setSide(long value) {
        copyOnWrite();
        instance.setSide(value);
        return this;
      }
      /**
       * <pre>
       * 1 for buy and 2 fory sell
       * </pre>
       *
       * <code>optional sint64 side = 5;</code>
       */
      public Builder clearSide() {
        copyOnWrite();
        instance.clearSide();
        return this;
      }

      /**
       * <pre>
       * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>optional sint64 price = 6;</code>
       */
      public long getPrice() {
        return instance.getPrice();
      }
      /**
       * <pre>
       * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>optional sint64 price = 6;</code>
       */
      public Builder setPrice(long value) {
        copyOnWrite();
        instance.setPrice(value);
        return this;
      }
      /**
       * <pre>
       * price of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>optional sint64 price = 6;</code>
       */
      public Builder clearPrice() {
        copyOnWrite();
        instance.clearPrice();
        return this;
      }

      /**
       * <pre>
       * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>optional sint64 quantity = 7;</code>
       */
      public long getQuantity() {
        return instance.getQuantity();
      }
      /**
       * <pre>
       * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>optional sint64 quantity = 7;</code>
       */
      public Builder setQuantity(long value) {
        copyOnWrite();
        instance.setQuantity(value);
        return this;
      }
      /**
       * <pre>
       * quantity of the order, which is the real price multiplied by 1e8 (10^8) and rounded to integer
       * </pre>
       *
       * <code>optional sint64 quantity = 7;</code>
       */
      public Builder clearQuantity() {
        copyOnWrite();
        instance.clearQuantity();
        return this;
      }

      /**
       * <pre>
       * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
       * </pre>
       *
       * <code>optional sint64 timeinforce = 8;</code>
       */
      public long getTimeinforce() {
        return instance.getTimeinforce();
      }
      /**
       * <pre>
       * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
       * </pre>
       *
       * <code>optional sint64 timeinforce = 8;</code>
       */
      public Builder setTimeinforce(long value) {
        copyOnWrite();
        instance.setTimeinforce(value);
        return this;
      }
      /**
       * <pre>
       * 1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)
       * </pre>
       *
       * <code>optional sint64 timeinforce = 8;</code>
       */
      public Builder clearTimeinforce() {
        copyOnWrite();
        instance.clearTimeinforce();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceTradeOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) arg1;
          sender_ = visitor.visitByteString(sender_ != com.google.protobuf.ByteString.EMPTY, sender_,
              other.sender_ != com.google.protobuf.ByteString.EMPTY, other.sender_);
          id_ = visitor.visitString(!id_.isEmpty(), id_,
              !other.id_.isEmpty(), other.id_);
          symbol_ = visitor.visitString(!symbol_.isEmpty(), symbol_,
              !other.symbol_.isEmpty(), other.symbol_);
          ordertype_ = visitor.visitLong(ordertype_ != 0L, ordertype_,
              other.ordertype_ != 0L, other.ordertype_);
          side_ = visitor.visitLong(side_ != 0L, side_,
              other.side_ != 0L, other.side_);
          price_ = visitor.visitLong(price_ != 0L, price_,
              other.price_ != 0L, other.price_);
          quantity_ = visitor.visitLong(quantity_ != 0L, quantity_,
              other.quantity_ != 0L, other.quantity_);
          timeinforce_ = visitor.visitLong(timeinforce_ != 0L, timeinforce_,
              other.timeinforce_ != 0L, other.timeinforce_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  sender_ = input.readBytes();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  id_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  symbol_ = s;
                  break;
                }
                case 32: {

                  ordertype_ = input.readSInt64();
                  break;
                }
                case 40: {

                  side_ = input.readSInt64();
                  break;
                }
                case 48: {

                  price_ = input.readSInt64();
                  break;
                }
                case 56: {

                  quantity_ = input.readSInt64();
                  break;
                }
                case 64: {

                  timeinforce_ = input.readSInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceTradeOrder)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceTradeOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceTradeOrder> PARSER;

    public static com.google.protobuf.Parser<BinanceTradeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceCancelTradeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceCancelTradeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 0x166E681B      // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    com.google.protobuf.ByteString getSender();

    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    java.lang.String getRefid();
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    com.google.protobuf.ByteString
        getRefidBytes();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceCancelTradeOrder}
   */
  public  static final class BinanceCancelTradeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceCancelTradeOrder, BinanceCancelTradeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceCancelTradeOrder)
      BinanceCancelTradeOrderOrBuilder {
    private BinanceCancelTradeOrder() {
      sender_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
      id_ = "";
      refid_ = "";
    }
    public static final int SENDER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString sender_;
    /**
     * <pre>
     * 0x166E681B      // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    public com.google.protobuf.ByteString getSender() {
      return sender_;
    }
    /**
     * <pre>
     * 0x166E681B      // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    private void setSender(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sender_ = value;
    }
    /**
     * <pre>
     * 0x166E681B      // prefix
     * </pre>
     *
     * <code>optional bytes sender = 1;</code>
     */
    private void clearSender() {
      
      sender_ = getDefaultInstance().getSender();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void setSymbol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      symbol_ = value;
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * symbol for trading pair in full name of the tokens
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      symbol_ = value.toStringUtf8();
    }

    public static final int ID_FIELD_NUMBER = 3;
    private java.lang.String id_;
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    public java.lang.String getId() {
      return id_;
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(id_);
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    private void setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    private void clearId() {
      
      id_ = getDefaultInstance().getId();
    }
    /**
     * <pre>
     * order id, optional
     * </pre>
     *
     * <code>optional string id = 3;</code>
     */
    private void setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value.toStringUtf8();
    }

    public static final int REFID_FIELD_NUMBER = 4;
    private java.lang.String refid_;
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    public java.lang.String getRefid() {
      return refid_;
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRefidBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(refid_);
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    private void setRefid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      refid_ = value;
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    private void clearRefid() {
      
      refid_ = getDefaultInstance().getRefid();
    }
    /**
     * <pre>
     * order id to cancel
     * </pre>
     *
     * <code>optional string refid = 4;</code>
     */
    private void setRefidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      refid_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!sender_.isEmpty()) {
        output.writeBytes(1, sender_);
      }
      if (!symbol_.isEmpty()) {
        output.writeString(2, getSymbol());
      }
      if (!id_.isEmpty()) {
        output.writeString(3, getId());
      }
      if (!refid_.isEmpty()) {
        output.writeString(4, getRefid());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!sender_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, sender_);
      }
      if (!symbol_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSymbol());
      }
      if (!id_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getId());
      }
      if (!refid_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getRefid());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceCancelTradeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceCancelTradeOrder)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrderOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 0x166E681B      // prefix
       * </pre>
       *
       * <code>optional bytes sender = 1;</code>
       */
      public com.google.protobuf.ByteString getSender() {
        return instance.getSender();
      }
      /**
       * <pre>
       * 0x166E681B      // prefix
       * </pre>
       *
       * <code>optional bytes sender = 1;</code>
       */
      public Builder setSender(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSender(value);
        return this;
      }
      /**
       * <pre>
       * 0x166E681B      // prefix
       * </pre>
       *
       * <code>optional bytes sender = 1;</code>
       */
      public Builder clearSender() {
        copyOnWrite();
        instance.clearSender();
        return this;
      }

      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * symbol for trading pair in full name of the tokens
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public java.lang.String getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        return instance.getIdBytes();
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public Builder setId(
          java.lang.String value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }
      /**
       * <pre>
       * order id, optional
       * </pre>
       *
       * <code>optional string id = 3;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>optional string refid = 4;</code>
       */
      public java.lang.String getRefid() {
        return instance.getRefid();
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>optional string refid = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRefidBytes() {
        return instance.getRefidBytes();
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>optional string refid = 4;</code>
       */
      public Builder setRefid(
          java.lang.String value) {
        copyOnWrite();
        instance.setRefid(value);
        return this;
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>optional string refid = 4;</code>
       */
      public Builder clearRefid() {
        copyOnWrite();
        instance.clearRefid();
        return this;
      }
      /**
       * <pre>
       * order id to cancel
       * </pre>
       *
       * <code>optional string refid = 4;</code>
       */
      public Builder setRefidBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRefidBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceCancelTradeOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) arg1;
          sender_ = visitor.visitByteString(sender_ != com.google.protobuf.ByteString.EMPTY, sender_,
              other.sender_ != com.google.protobuf.ByteString.EMPTY, other.sender_);
          symbol_ = visitor.visitString(!symbol_.isEmpty(), symbol_,
              !other.symbol_.isEmpty(), other.symbol_);
          id_ = visitor.visitString(!id_.isEmpty(), id_,
              !other.id_.isEmpty(), other.id_);
          refid_ = visitor.visitString(!refid_.isEmpty(), refid_,
              !other.refid_.isEmpty(), other.refid_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  sender_ = input.readBytes();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  symbol_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  id_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  refid_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceCancelTradeOrder)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceCancelTradeOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceCancelTradeOrder> PARSER;

    public static com.google.protobuf.Parser<BinanceCancelTradeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceSendOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSendOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input> 
        getInputsList();
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input getInputs(int index);
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    int getInputsCount();

    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output> 
        getOutputsList();
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output getOutputs(int index);
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    int getOutputsCount();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceSendOrder}
   */
  public  static final class BinanceSendOrder extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceSendOrder, BinanceSendOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceSendOrder)
      BinanceSendOrderOrBuilder {
    private BinanceSendOrder() {
      inputs_ = emptyProtobufList();
      outputs_ = emptyProtobufList();
    }
    public interface TokenOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSendOrder.Token)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string denom = 1;</code>
       */
      java.lang.String getDenom();
      /**
       * <code>optional string denom = 1;</code>
       */
      com.google.protobuf.ByteString
          getDenomBytes();

      /**
       * <code>optional sint64 amount = 2;</code>
       */
      long getAmount();
    }
    /**
     * <pre>
     * 0x2A2C87FA
     * </pre>
     *
     * Protobuf type {@code TW.proto.BinanceSendOrder.Token}
     */
    public  static final class Token extends
        com.google.protobuf.GeneratedMessageLite<
            Token, Token.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.proto.BinanceSendOrder.Token)
        TokenOrBuilder {
      private Token() {
        denom_ = "";
      }
      public static final int DENOM_FIELD_NUMBER = 1;
      private java.lang.String denom_;
      /**
       * <code>optional string denom = 1;</code>
       */
      public java.lang.String getDenom() {
        return denom_;
      }
      /**
       * <code>optional string denom = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDenomBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(denom_);
      }
      /**
       * <code>optional string denom = 1;</code>
       */
      private void setDenom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        denom_ = value;
      }
      /**
       * <code>optional string denom = 1;</code>
       */
      private void clearDenom() {
        
        denom_ = getDefaultInstance().getDenom();
      }
      /**
       * <code>optional string denom = 1;</code>
       */
      private void setDenomBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        denom_ = value.toStringUtf8();
      }

      public static final int AMOUNT_FIELD_NUMBER = 2;
      private long amount_;
      /**
       * <code>optional sint64 amount = 2;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>optional sint64 amount = 2;</code>
       */
      private void setAmount(long value) {
        
        amount_ = value;
      }
      /**
       * <code>optional sint64 amount = 2;</code>
       */
      private void clearAmount() {
        
        amount_ = 0L;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!denom_.isEmpty()) {
          output.writeString(1, getDenom());
        }
        if (amount_ != 0L) {
          output.writeSInt64(2, amount_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!denom_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDenom());
        }
        if (amount_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(2, amount_);
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * <pre>
       * 0x2A2C87FA
       * </pre>
       *
       * Protobuf type {@code TW.proto.BinanceSendOrder.Token}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSendOrder.Token)
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.TokenOrBuilder {
        // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string denom = 1;</code>
         */
        public java.lang.String getDenom() {
          return instance.getDenom();
        }
        /**
         * <code>optional string denom = 1;</code>
         */
        public com.google.protobuf.ByteString
            getDenomBytes() {
          return instance.getDenomBytes();
        }
        /**
         * <code>optional string denom = 1;</code>
         */
        public Builder setDenom(
            java.lang.String value) {
          copyOnWrite();
          instance.setDenom(value);
          return this;
        }
        /**
         * <code>optional string denom = 1;</code>
         */
        public Builder clearDenom() {
          copyOnWrite();
          instance.clearDenom();
          return this;
        }
        /**
         * <code>optional string denom = 1;</code>
         */
        public Builder setDenomBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setDenomBytes(value);
          return this;
        }

        /**
         * <code>optional sint64 amount = 2;</code>
         */
        public long getAmount() {
          return instance.getAmount();
        }
        /**
         * <code>optional sint64 amount = 2;</code>
         */
        public Builder setAmount(long value) {
          copyOnWrite();
          instance.setAmount(value);
          return this;
        }
        /**
         * <code>optional sint64 amount = 2;</code>
         */
        public Builder clearAmount() {
          copyOnWrite();
          instance.clearAmount();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSendOrder.Token)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token) arg1;
            denom_ = visitor.visitString(!denom_.isEmpty(), denom_,
                !other.denom_.isEmpty(), other.denom_);
            amount_ = visitor.visitLong(amount_ != 0L, amount_,
                other.amount_ != 0L, other.amount_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readStringRequireUtf8();

                    denom_ = s;
                    break;
                  }
                  case 16: {

                    amount_ = input.readSInt64();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.proto.BinanceSendOrder.Token)
      private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Token();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Token> PARSER;

      public static com.google.protobuf.Parser<Token> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface InputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSendOrder.Input)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional bytes address = 1;</code>
       */
      com.google.protobuf.ByteString getAddress();

      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> 
          getCoinsList();
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getCoins(int index);
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      int getCoinsCount();
    }
    /**
     * Protobuf type {@code TW.proto.BinanceSendOrder.Input}
     */
    public  static final class Input extends
        com.google.protobuf.GeneratedMessageLite<
            Input, Input.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.proto.BinanceSendOrder.Input)
        InputOrBuilder {
      private Input() {
        address_ = com.google.protobuf.ByteString.EMPTY;
        coins_ = emptyProtobufList();
      }
      private int bitField0_;
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString address_;
      /**
       * <code>optional bytes address = 1;</code>
       */
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <code>optional bytes address = 1;</code>
       */
      private void setAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
      }
      /**
       * <code>optional bytes address = 1;</code>
       */
      private void clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
      }

      public static final int COINS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> coins_;
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> getCoinsList() {
        return coins_;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public java.util.List<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.TokenOrBuilder> 
          getCoinsOrBuilderList() {
        return coins_;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public int getCoinsCount() {
        return coins_.size();
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getCoins(int index) {
        return coins_.get(index);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.TokenOrBuilder getCoinsOrBuilder(
          int index) {
        return coins_.get(index);
      }
      private void ensureCoinsIsMutable() {
        if (!coins_.isModifiable()) {
          coins_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(coins_);
         }
      }

      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void setCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoinsIsMutable();
        coins_.set(index, value);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void setCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
        ensureCoinsIsMutable();
        coins_.set(index, builderForValue.build());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoinsIsMutable();
        coins_.add(value);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoinsIsMutable();
        coins_.add(index, value);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
        ensureCoinsIsMutable();
        coins_.add(builderForValue.build());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
        ensureCoinsIsMutable();
        coins_.add(index, builderForValue.build());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addAllCoins(
          java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> values) {
        ensureCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, coins_);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void clearCoins() {
        coins_ = emptyProtobufList();
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void removeCoins(int index) {
        ensureCoinsIsMutable();
        coins_.remove(index);
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!address_.isEmpty()) {
          output.writeBytes(1, address_);
        }
        for (int i = 0; i < coins_.size(); i++) {
          output.writeMessage(2, coins_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!address_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, address_);
        }
        for (int i = 0; i < coins_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, coins_.get(i));
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code TW.proto.BinanceSendOrder.Input}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSendOrder.Input)
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.InputOrBuilder {
        // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional bytes address = 1;</code>
         */
        public com.google.protobuf.ByteString getAddress() {
          return instance.getAddress();
        }
        /**
         * <code>optional bytes address = 1;</code>
         */
        public Builder setAddress(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAddress(value);
          return this;
        }
        /**
         * <code>optional bytes address = 1;</code>
         */
        public Builder clearAddress() {
          copyOnWrite();
          instance.clearAddress();
          return this;
        }

        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> getCoinsList() {
          return java.util.Collections.unmodifiableList(
              instance.getCoinsList());
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public int getCoinsCount() {
          return instance.getCoinsCount();
        }/**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getCoins(int index) {
          return instance.getCoins(index);
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
          copyOnWrite();
          instance.setCoins(index, value);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.setCoins(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(value);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(index, value);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(builderForValue);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addAllCoins(
            java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> values) {
          copyOnWrite();
          instance.addAllCoins(values);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder clearCoins() {
          copyOnWrite();
          instance.clearCoins();
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder removeCoins(int index) {
          copyOnWrite();
          instance.removeCoins(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSendOrder.Input)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            coins_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input) arg1;
            address_ = visitor.visitByteString(address_ != com.google.protobuf.ByteString.EMPTY, address_,
                other.address_ != com.google.protobuf.ByteString.EMPTY, other.address_);
            coins_= visitor.visitList(coins_, other.coins_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {

                    address_ = input.readBytes();
                    break;
                  }
                  case 18: {
                    if (!coins_.isModifiable()) {
                      coins_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(coins_);
                    }
                    coins_.add(
                        input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.parser(), extensionRegistry));
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.proto.BinanceSendOrder.Input)
      private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Input();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Input> PARSER;

      public static com.google.protobuf.Parser<Input> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface OutputOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSendOrder.Output)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional bytes address = 1;</code>
       */
      com.google.protobuf.ByteString getAddress();

      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> 
          getCoinsList();
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getCoins(int index);
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      int getCoinsCount();
    }
    /**
     * Protobuf type {@code TW.proto.BinanceSendOrder.Output}
     */
    public  static final class Output extends
        com.google.protobuf.GeneratedMessageLite<
            Output, Output.Builder> implements
        // @@protoc_insertion_point(message_implements:TW.proto.BinanceSendOrder.Output)
        OutputOrBuilder {
      private Output() {
        address_ = com.google.protobuf.ByteString.EMPTY;
        coins_ = emptyProtobufList();
      }
      private int bitField0_;
      public static final int ADDRESS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString address_;
      /**
       * <code>optional bytes address = 1;</code>
       */
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <code>optional bytes address = 1;</code>
       */
      private void setAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
      }
      /**
       * <code>optional bytes address = 1;</code>
       */
      private void clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
      }

      public static final int COINS_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> coins_;
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> getCoinsList() {
        return coins_;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public java.util.List<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.TokenOrBuilder> 
          getCoinsOrBuilderList() {
        return coins_;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public int getCoinsCount() {
        return coins_.size();
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getCoins(int index) {
        return coins_.get(index);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.TokenOrBuilder getCoinsOrBuilder(
          int index) {
        return coins_.get(index);
      }
      private void ensureCoinsIsMutable() {
        if (!coins_.isModifiable()) {
          coins_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(coins_);
         }
      }

      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void setCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoinsIsMutable();
        coins_.set(index, value);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void setCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
        ensureCoinsIsMutable();
        coins_.set(index, builderForValue.build());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoinsIsMutable();
        coins_.add(value);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCoinsIsMutable();
        coins_.add(index, value);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
        ensureCoinsIsMutable();
        coins_.add(builderForValue.build());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addCoins(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
        ensureCoinsIsMutable();
        coins_.add(index, builderForValue.build());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void addAllCoins(
          java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> values) {
        ensureCoinsIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, coins_);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void clearCoins() {
        coins_ = emptyProtobufList();
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
       */
      private void removeCoins(int index) {
        ensureCoinsIsMutable();
        coins_.remove(index);
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!address_.isEmpty()) {
          output.writeBytes(1, address_);
        }
        for (int i = 0; i < coins_.size(); i++) {
          output.writeMessage(2, coins_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (!address_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, address_);
        }
        for (int i = 0; i < coins_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, coins_.get(i));
        }
        memoizedSerializedSize = size;
        return size;
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code TW.proto.BinanceSendOrder.Output}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output, Builder> implements
          // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSendOrder.Output)
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.OutputOrBuilder {
        // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional bytes address = 1;</code>
         */
        public com.google.protobuf.ByteString getAddress() {
          return instance.getAddress();
        }
        /**
         * <code>optional bytes address = 1;</code>
         */
        public Builder setAddress(com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setAddress(value);
          return this;
        }
        /**
         * <code>optional bytes address = 1;</code>
         */
        public Builder clearAddress() {
          copyOnWrite();
          instance.clearAddress();
          return this;
        }

        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> getCoinsList() {
          return java.util.Collections.unmodifiableList(
              instance.getCoinsList());
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public int getCoinsCount() {
          return instance.getCoinsCount();
        }/**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token getCoins(int index) {
          return instance.getCoins(index);
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
          copyOnWrite();
          instance.setCoins(index, value);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder setCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.setCoins(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(value);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token value) {
          copyOnWrite();
          instance.addCoins(index, value);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(builderForValue);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addCoins(
            int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.Builder builderForValue) {
          copyOnWrite();
          instance.addCoins(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder addAllCoins(
            java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token> values) {
          copyOnWrite();
          instance.addAllCoins(values);
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder clearCoins() {
          copyOnWrite();
          instance.clearCoins();
          return this;
        }
        /**
         * <code>repeated .TW.proto.BinanceSendOrder.Token coins = 2;</code>
         */
        public Builder removeCoins(int index) {
          copyOnWrite();
          instance.removeCoins(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSendOrder.Output)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            coins_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output) arg1;
            address_ = visitor.visitByteString(address_ != com.google.protobuf.ByteString.EMPTY, address_,
                other.address_ != com.google.protobuf.ByteString.EMPTY, other.address_);
            coins_= visitor.visitList(coins_, other.coins_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!input.skipField(tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {

                    address_ = input.readBytes();
                    break;
                  }
                  case 18: {
                    if (!coins_.isModifiable()) {
                      coins_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(coins_);
                    }
                    coins_.add(
                        input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Token.parser(), extensionRegistry));
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:TW.proto.BinanceSendOrder.Output)
      private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Output();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Output> PARSER;

      public static com.google.protobuf.Parser<Output> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int INPUTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input> inputs_;
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input> getInputsList() {
      return inputs_;
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    public java.util.List<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.InputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.InputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }
    private void ensureInputsIsMutable() {
      if (!inputs_.isModifiable()) {
        inputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(inputs_);
       }
    }

    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void setInputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInputsIsMutable();
      inputs_.set(index, value);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void setInputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.Builder builderForValue) {
      ensureInputsIsMutable();
      inputs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void addInputs(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInputsIsMutable();
      inputs_.add(value);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void addInputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInputsIsMutable();
      inputs_.add(index, value);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void addInputs(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.Builder builderForValue) {
      ensureInputsIsMutable();
      inputs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void addInputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.Builder builderForValue) {
      ensureInputsIsMutable();
      inputs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void addAllInputs(
        java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input> values) {
      ensureInputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inputs_);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void clearInputs() {
      inputs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
     */
    private void removeInputs(int index) {
      ensureInputsIsMutable();
      inputs_.remove(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output> outputs_;
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    public java.util.List<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.OutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }
    private void ensureOutputsIsMutable() {
      if (!outputs_.isModifiable()) {
        outputs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(outputs_);
       }
    }

    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void setOutputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOutputsIsMutable();
      outputs_.set(index, value);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void setOutputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.Builder builderForValue) {
      ensureOutputsIsMutable();
      outputs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void addOutputs(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOutputsIsMutable();
      outputs_.add(value);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void addOutputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOutputsIsMutable();
      outputs_.add(index, value);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void addOutputs(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.Builder builderForValue) {
      ensureOutputsIsMutable();
      outputs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void addOutputs(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.Builder builderForValue) {
      ensureOutputsIsMutable();
      outputs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void addAllOutputs(
        java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output> values) {
      ensureOutputsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outputs_);
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void clearOutputs() {
      outputs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
     */
    private void removeOutputs(int index) {
      ensureOutputsIsMutable();
      outputs_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < inputs_.size(); i++) {
        output.writeMessage(1, inputs_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(2, outputs_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < inputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, inputs_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, outputs_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceSendOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSendOrder)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrderOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input> getInputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getInputsList());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public int getInputsCount() {
        return instance.getInputsCount();
      }/**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input getInputs(int index) {
        return instance.getInputs(index);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder setInputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input value) {
        copyOnWrite();
        instance.setInputs(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder setInputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.Builder builderForValue) {
        copyOnWrite();
        instance.setInputs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input value) {
        copyOnWrite();
        instance.addInputs(value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input value) {
        copyOnWrite();
        instance.addInputs(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder addInputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.Builder builderForValue) {
        copyOnWrite();
        instance.addInputs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input> values) {
        copyOnWrite();
        instance.addAllInputs(values);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder clearInputs() {
        copyOnWrite();
        instance.clearInputs();
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Input inputs = 1;</code>
       */
      public Builder removeInputs(int index) {
        copyOnWrite();
        instance.removeInputs(index);
        return this;
      }

      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output> getOutputsList() {
        return java.util.Collections.unmodifiableList(
            instance.getOutputsList());
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public int getOutputsCount() {
        return instance.getOutputsCount();
      }/**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output getOutputs(int index) {
        return instance.getOutputs(index);
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output value) {
        copyOnWrite();
        instance.setOutputs(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder setOutputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.Builder builderForValue) {
        copyOnWrite();
        instance.setOutputs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output value) {
        copyOnWrite();
        instance.addOutputs(value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output value) {
        copyOnWrite();
        instance.addOutputs(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder addOutputs(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.Builder builderForValue) {
        copyOnWrite();
        instance.addOutputs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output> values) {
        copyOnWrite();
        instance.addAllOutputs(values);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder clearOutputs() {
        copyOnWrite();
        instance.clearOutputs();
        return this;
      }
      /**
       * <code>repeated .TW.proto.BinanceSendOrder.Output outputs = 2;</code>
       */
      public Builder removeOutputs(int index) {
        copyOnWrite();
        instance.removeOutputs(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSendOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          inputs_.makeImmutable();
          outputs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) arg1;
          inputs_= visitor.visitList(inputs_, other.inputs_);
          outputs_= visitor.visitList(outputs_, other.outputs_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!inputs_.isModifiable()) {
                    inputs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(inputs_);
                  }
                  inputs_.add(
                      input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Input.parser(), extensionRegistry));
                  break;
                }
                case 18: {
                  if (!outputs_.isModifiable()) {
                    outputs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(outputs_);
                  }
                  outputs_.add(
                      input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Output.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceSendOrder)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceSendOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceSendOrder> PARSER;

    public static com.google.protobuf.Parser<BinanceSendOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceTokenFreezeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceTokenFreezeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 0xE774B32D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceTokenFreezeOrder}
   */
  public  static final class BinanceTokenFreezeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceTokenFreezeOrder, BinanceTokenFreezeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceTokenFreezeOrder)
      BinanceTokenFreezeOrderOrBuilder {
    private BinanceTokenFreezeOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * 0xE774B32D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * 0xE774B32D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      from_ = value;
    }
    /**
     * <pre>
     * 0xE774B32D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void setSymbol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      symbol_ = value.toStringUtf8();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * amount of token to freeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!from_.isEmpty()) {
        output.writeBytes(1, from_);
      }
      if (!symbol_.isEmpty()) {
        output.writeString(2, getSymbol());
      }
      if (amount_ != 0L) {
        output.writeSInt64(3, amount_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!from_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, from_);
      }
      if (!symbol_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSymbol());
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, amount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceTokenFreezeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceTokenFreezeOrder)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrderOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 0xE774B32D      // prefix
       * </pre>
       *
       * <code>optional bytes from = 1;</code>
       */
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * 0xE774B32D      // prefix
       * </pre>
       *
       * <code>optional bytes from = 1;</code>
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * 0xE774B32D      // prefix
       * </pre>
       *
       * <code>optional bytes from = 1;</code>
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * amount of token to freeze
       * </pre>
       *
       * <code>optional sint64 amount = 3;</code>
       */
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * amount of token to freeze
       * </pre>
       *
       * <code>optional sint64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * amount of token to freeze
       * </pre>
       *
       * <code>optional sint64 amount = 3;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceTokenFreezeOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) arg1;
          from_ = visitor.visitByteString(from_ != com.google.protobuf.ByteString.EMPTY, from_,
              other.from_ != com.google.protobuf.ByteString.EMPTY, other.from_);
          symbol_ = visitor.visitString(!symbol_.isEmpty(), symbol_,
              !other.symbol_.isEmpty(), other.symbol_);
          amount_ = visitor.visitLong(amount_ != 0L, amount_,
              other.amount_ != 0L, other.amount_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  from_ = input.readBytes();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  symbol_ = s;
                  break;
                }
                case 24: {

                  amount_ = input.readSInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceTokenFreezeOrder)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceTokenFreezeOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceTokenFreezeOrder> PARSER;

    public static com.google.protobuf.Parser<BinanceTokenFreezeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceTokenUnfreezeOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceTokenUnfreezeOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 0x6515FF0D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    com.google.protobuf.ByteString getFrom();

    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code TW.proto.BinanceTokenUnfreezeOrder}
   */
  public  static final class BinanceTokenUnfreezeOrder extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceTokenUnfreezeOrder, BinanceTokenUnfreezeOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceTokenUnfreezeOrder)
      BinanceTokenUnfreezeOrderOrBuilder {
    private BinanceTokenUnfreezeOrder() {
      from_ = com.google.protobuf.ByteString.EMPTY;
      symbol_ = "";
    }
    public static final int FROM_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString from_;
    /**
     * <pre>
     * 0x6515FF0D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    public com.google.protobuf.ByteString getFrom() {
      return from_;
    }
    /**
     * <pre>
     * 0x6515FF0D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    private void setFrom(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      from_ = value;
    }
    /**
     * <pre>
     * 0x6515FF0D      // prefix
     * </pre>
     *
     * <code>optional bytes from = 1;</code>
     */
    private void clearFrom() {
      
      from_ = getDefaultInstance().getFrom();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private java.lang.String symbol_;
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    public java.lang.String getSymbol() {
      return symbol_;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(symbol_);
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void setSymbol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      symbol_ = value;
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
    }
    /**
     * <pre>
     * token symbol, in full name with "-" suffix
     * </pre>
     *
     * <code>optional string symbol = 2;</code>
     */
    private void setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      symbol_ = value.toStringUtf8();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }
    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <pre>
     * amount of token to unfreeze
     * </pre>
     *
     * <code>optional sint64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!from_.isEmpty()) {
        output.writeBytes(1, from_);
      }
      if (!symbol_.isEmpty()) {
        output.writeString(2, getSymbol());
      }
      if (amount_ != 0L) {
        output.writeSInt64(3, amount_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!from_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, from_);
      }
      if (!symbol_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getSymbol());
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, amount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BinanceTokenUnfreezeOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceTokenUnfreezeOrder)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrderOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 0x6515FF0D      // prefix
       * </pre>
       *
       * <code>optional bytes from = 1;</code>
       */
      public com.google.protobuf.ByteString getFrom() {
        return instance.getFrom();
      }
      /**
       * <pre>
       * 0x6515FF0D      // prefix
       * </pre>
       *
       * <code>optional bytes from = 1;</code>
       */
      public Builder setFrom(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFrom(value);
        return this;
      }
      /**
       * <pre>
       * 0x6515FF0D      // prefix
       * </pre>
       *
       * <code>optional bytes from = 1;</code>
       */
      public Builder clearFrom() {
        copyOnWrite();
        instance.clearFrom();
        return this;
      }

      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public java.lang.String getSymbol() {
        return instance.getSymbol();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        return instance.getSymbolBytes();
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder setSymbol(
          java.lang.String value) {
        copyOnWrite();
        instance.setSymbol(value);
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder clearSymbol() {
        copyOnWrite();
        instance.clearSymbol();
        return this;
      }
      /**
       * <pre>
       * token symbol, in full name with "-" suffix
       * </pre>
       *
       * <code>optional string symbol = 2;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSymbolBytes(value);
        return this;
      }

      /**
       * <pre>
       * amount of token to unfreeze
       * </pre>
       *
       * <code>optional sint64 amount = 3;</code>
       */
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <pre>
       * amount of token to unfreeze
       * </pre>
       *
       * <code>optional sint64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <pre>
       * amount of token to unfreeze
       * </pre>
       *
       * <code>optional sint64 amount = 3;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceTokenUnfreezeOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) arg1;
          from_ = visitor.visitByteString(from_ != com.google.protobuf.ByteString.EMPTY, from_,
              other.from_ != com.google.protobuf.ByteString.EMPTY, other.from_);
          symbol_ = visitor.visitString(!symbol_.isEmpty(), symbol_,
              !other.symbol_.isEmpty(), other.symbol_);
          amount_ = visitor.visitLong(amount_ != 0L, amount_,
              other.amount_ != 0L, other.amount_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  from_ = input.readBytes();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  symbol_ = s;
                  break;
                }
                case 24: {

                  amount_ = input.readSInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceTokenUnfreezeOrder)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceTokenUnfreezeOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceTokenUnfreezeOrder> PARSER;

    public static com.google.protobuf.Parser<BinanceTokenUnfreezeOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BinanceSigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BinanceSigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string chain_id = 1;</code>
     */
    java.lang.String getChainId();
    /**
     * <code>optional string chain_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getChainIdBytes();

    /**
     * <code>optional sint64 account_number = 2;</code>
     */
    long getAccountNumber();

    /**
     * <code>optional sint64 sequence = 3;</code>
     */
    long getSequence();

    /**
     * <code>optional sint64 source = 4;</code>
     */
    long getSource();

    /**
     * <code>optional string memo = 5;</code>
     */
    java.lang.String getMemo();
    /**
     * <code>optional string memo = 5;</code>
     */
    com.google.protobuf.ByteString
        getMemoBytes();

    /**
     * <code>optional bytes private_key = 6;</code>
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder getTradeOrder();

    /**
     * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder getCancelTradeOrder();

    /**
     * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder getSendOrder();

    /**
     * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder getFreezeOrder();

    /**
     * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder getUnfreezeOrder();

    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput.OrderOneofCase getOrderOneofCase();
  }
  /**
   * <pre>
   * Input data necessary to create a signed order.
   * </pre>
   *
   * Protobuf type {@code TW.proto.BinanceSigningInput}
   */
  public  static final class BinanceSigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          BinanceSigningInput, BinanceSigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BinanceSigningInput)
      BinanceSigningInputOrBuilder {
    private BinanceSigningInput() {
      chainId_ = "";
      memo_ = "";
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int orderOneofCase_ = 0;
    private java.lang.Object orderOneof_;
    public enum OrderOneofCase
        implements com.google.protobuf.Internal.EnumLite {
      TRADE_ORDER(7),
      CANCEL_TRADE_ORDER(8),
      SEND_ORDER(9),
      FREEZE_ORDER(10),
      UNFREEZE_ORDER(11),
      ORDERONEOF_NOT_SET(0);
      private final int value;
      private OrderOneofCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OrderOneofCase valueOf(int value) {
        return forNumber(value);
      }

      public static OrderOneofCase forNumber(int value) {
        switch (value) {
          case 7: return TRADE_ORDER;
          case 8: return CANCEL_TRADE_ORDER;
          case 9: return SEND_ORDER;
          case 10: return FREEZE_ORDER;
          case 11: return UNFREEZE_ORDER;
          case 0: return ORDERONEOF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OrderOneofCase
    getOrderOneofCase() {
      return OrderOneofCase.forNumber(
          orderOneofCase_);
    }

    private void clearOrderOneof() {
      orderOneofCase_ = 0;
      orderOneof_ = null;
    }

    public static final int CHAIN_ID_FIELD_NUMBER = 1;
    private java.lang.String chainId_;
    /**
     * <code>optional string chain_id = 1;</code>
     */
    public java.lang.String getChainId() {
      return chainId_;
    }
    /**
     * <code>optional string chain_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChainIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chainId_);
    }
    /**
     * <code>optional string chain_id = 1;</code>
     */
    private void setChainId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      chainId_ = value;
    }
    /**
     * <code>optional string chain_id = 1;</code>
     */
    private void clearChainId() {
      
      chainId_ = getDefaultInstance().getChainId();
    }
    /**
     * <code>optional string chain_id = 1;</code>
     */
    private void setChainIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      chainId_ = value.toStringUtf8();
    }

    public static final int ACCOUNT_NUMBER_FIELD_NUMBER = 2;
    private long accountNumber_;
    /**
     * <code>optional sint64 account_number = 2;</code>
     */
    public long getAccountNumber() {
      return accountNumber_;
    }
    /**
     * <code>optional sint64 account_number = 2;</code>
     */
    private void setAccountNumber(long value) {
      
      accountNumber_ = value;
    }
    /**
     * <code>optional sint64 account_number = 2;</code>
     */
    private void clearAccountNumber() {
      
      accountNumber_ = 0L;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private long sequence_;
    /**
     * <code>optional sint64 sequence = 3;</code>
     */
    public long getSequence() {
      return sequence_;
    }
    /**
     * <code>optional sint64 sequence = 3;</code>
     */
    private void setSequence(long value) {
      
      sequence_ = value;
    }
    /**
     * <code>optional sint64 sequence = 3;</code>
     */
    private void clearSequence() {
      
      sequence_ = 0L;
    }

    public static final int SOURCE_FIELD_NUMBER = 4;
    private long source_;
    /**
     * <code>optional sint64 source = 4;</code>
     */
    public long getSource() {
      return source_;
    }
    /**
     * <code>optional sint64 source = 4;</code>
     */
    private void setSource(long value) {
      
      source_ = value;
    }
    /**
     * <code>optional sint64 source = 4;</code>
     */
    private void clearSource() {
      
      source_ = 0L;
    }

    public static final int MEMO_FIELD_NUMBER = 5;
    private java.lang.String memo_;
    /**
     * <code>optional string memo = 5;</code>
     */
    public java.lang.String getMemo() {
      return memo_;
    }
    /**
     * <code>optional string memo = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMemoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(memo_);
    }
    /**
     * <code>optional string memo = 5;</code>
     */
    private void setMemo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      memo_ = value;
    }
    /**
     * <code>optional string memo = 5;</code>
     */
    private void clearMemo() {
      
      memo_ = getDefaultInstance().getMemo();
    }
    /**
     * <code>optional string memo = 5;</code>
     */
    private void setMemoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      memo_ = value.toStringUtf8();
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <code>optional bytes private_key = 6;</code>
     */
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }
    /**
     * <code>optional bytes private_key = 6;</code>
     */
    private void setPrivateKey(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      privateKey_ = value;
    }
    /**
     * <code>optional bytes private_key = 6;</code>
     */
    private void clearPrivateKey() {
      
      privateKey_ = getDefaultInstance().getPrivateKey();
    }

    public static final int TRADE_ORDER_FIELD_NUMBER = 7;
    /**
     * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder getTradeOrder() {
      if (orderOneofCase_ == 7) {
         return (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) orderOneof_;
      }
      return com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.getDefaultInstance();
    }
    /**
     * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
     */
    private void setTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      orderOneof_ = value;
      orderOneofCase_ = 7;
    }
    /**
     * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
     */
    private void setTradeOrder(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.Builder builderForValue) {
      orderOneof_ = builderForValue.build();
      orderOneofCase_ = 7;
    }
    /**
     * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
     */
    private void mergeTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder value) {
      if (orderOneofCase_ == 7 &&
          orderOneof_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.getDefaultInstance()) {
        orderOneof_ = com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.newBuilder((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 7;
    }
    /**
     * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
     */
    private void clearTradeOrder() {
      if (orderOneofCase_ == 7) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int CANCEL_TRADE_ORDER_FIELD_NUMBER = 8;
    /**
     * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder getCancelTradeOrder() {
      if (orderOneofCase_ == 8) {
         return (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) orderOneof_;
      }
      return com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.getDefaultInstance();
    }
    /**
     * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
     */
    private void setCancelTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      orderOneof_ = value;
      orderOneofCase_ = 8;
    }
    /**
     * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
     */
    private void setCancelTradeOrder(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.Builder builderForValue) {
      orderOneof_ = builderForValue.build();
      orderOneofCase_ = 8;
    }
    /**
     * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
     */
    private void mergeCancelTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder value) {
      if (orderOneofCase_ == 8 &&
          orderOneof_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.getDefaultInstance()) {
        orderOneof_ = com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.newBuilder((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 8;
    }
    /**
     * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
     */
    private void clearCancelTradeOrder() {
      if (orderOneofCase_ == 8) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int SEND_ORDER_FIELD_NUMBER = 9;
    /**
     * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder getSendOrder() {
      if (orderOneofCase_ == 9) {
         return (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) orderOneof_;
      }
      return com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.getDefaultInstance();
    }
    /**
     * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
     */
    private void setSendOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      orderOneof_ = value;
      orderOneofCase_ = 9;
    }
    /**
     * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
     */
    private void setSendOrder(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Builder builderForValue) {
      orderOneof_ = builderForValue.build();
      orderOneofCase_ = 9;
    }
    /**
     * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
     */
    private void mergeSendOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder value) {
      if (orderOneofCase_ == 9 &&
          orderOneof_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.getDefaultInstance()) {
        orderOneof_ = com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.newBuilder((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 9;
    }
    /**
     * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
     */
    private void clearSendOrder() {
      if (orderOneofCase_ == 9) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int FREEZE_ORDER_FIELD_NUMBER = 10;
    /**
     * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder getFreezeOrder() {
      if (orderOneofCase_ == 10) {
         return (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) orderOneof_;
      }
      return com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.getDefaultInstance();
    }
    /**
     * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
     */
    private void setFreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      orderOneof_ = value;
      orderOneofCase_ = 10;
    }
    /**
     * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
     */
    private void setFreezeOrder(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.Builder builderForValue) {
      orderOneof_ = builderForValue.build();
      orderOneofCase_ = 10;
    }
    /**
     * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
     */
    private void mergeFreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder value) {
      if (orderOneofCase_ == 10 &&
          orderOneof_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.getDefaultInstance()) {
        orderOneof_ = com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.newBuilder((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 10;
    }
    /**
     * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
     */
    private void clearFreezeOrder() {
      if (orderOneofCase_ == 10) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public static final int UNFREEZE_ORDER_FIELD_NUMBER = 11;
    /**
     * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder getUnfreezeOrder() {
      if (orderOneofCase_ == 11) {
         return (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) orderOneof_;
      }
      return com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.getDefaultInstance();
    }
    /**
     * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
     */
    private void setUnfreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      orderOneof_ = value;
      orderOneofCase_ = 11;
    }
    /**
     * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
     */
    private void setUnfreezeOrder(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.Builder builderForValue) {
      orderOneof_ = builderForValue.build();
      orderOneofCase_ = 11;
    }
    /**
     * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
     */
    private void mergeUnfreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder value) {
      if (orderOneofCase_ == 11 &&
          orderOneof_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.getDefaultInstance()) {
        orderOneof_ = com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.newBuilder((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) orderOneof_)
            .mergeFrom(value).buildPartial();
      } else {
        orderOneof_ = value;
      }
      orderOneofCase_ = 11;
    }
    /**
     * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
     */
    private void clearUnfreezeOrder() {
      if (orderOneofCase_ == 11) {
        orderOneofCase_ = 0;
        orderOneof_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!chainId_.isEmpty()) {
        output.writeString(1, getChainId());
      }
      if (accountNumber_ != 0L) {
        output.writeSInt64(2, accountNumber_);
      }
      if (sequence_ != 0L) {
        output.writeSInt64(3, sequence_);
      }
      if (source_ != 0L) {
        output.writeSInt64(4, source_);
      }
      if (!memo_.isEmpty()) {
        output.writeString(5, getMemo());
      }
      if (!privateKey_.isEmpty()) {
        output.writeBytes(6, privateKey_);
      }
      if (orderOneofCase_ == 7) {
        output.writeMessage(7, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) orderOneof_);
      }
      if (orderOneofCase_ == 8) {
        output.writeMessage(8, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) orderOneof_);
      }
      if (orderOneofCase_ == 9) {
        output.writeMessage(9, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) orderOneof_);
      }
      if (orderOneofCase_ == 10) {
        output.writeMessage(10, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) orderOneof_);
      }
      if (orderOneofCase_ == 11) {
        output.writeMessage(11, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) orderOneof_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!chainId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChainId());
      }
      if (accountNumber_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(2, accountNumber_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, sequence_);
      }
      if (source_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(4, source_);
      }
      if (!memo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMemo());
      }
      if (!privateKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, privateKey_);
      }
      if (orderOneofCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) orderOneof_);
      }
      if (orderOneofCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) orderOneof_);
      }
      if (orderOneofCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) orderOneof_);
      }
      if (orderOneofCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) orderOneof_);
      }
      if (orderOneofCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) orderOneof_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed order.
     * </pre>
     *
     * Protobuf type {@code TW.proto.BinanceSigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BinanceSigningInput)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInputOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public OrderOneofCase
          getOrderOneofCase() {
        return instance.getOrderOneofCase();
      }

      public Builder clearOrderOneof() {
        copyOnWrite();
        instance.clearOrderOneof();
        return this;
      }


      /**
       * <code>optional string chain_id = 1;</code>
       */
      public java.lang.String getChainId() {
        return instance.getChainId();
      }
      /**
       * <code>optional string chain_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChainIdBytes() {
        return instance.getChainIdBytes();
      }
      /**
       * <code>optional string chain_id = 1;</code>
       */
      public Builder setChainId(
          java.lang.String value) {
        copyOnWrite();
        instance.setChainId(value);
        return this;
      }
      /**
       * <code>optional string chain_id = 1;</code>
       */
      public Builder clearChainId() {
        copyOnWrite();
        instance.clearChainId();
        return this;
      }
      /**
       * <code>optional string chain_id = 1;</code>
       */
      public Builder setChainIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChainIdBytes(value);
        return this;
      }

      /**
       * <code>optional sint64 account_number = 2;</code>
       */
      public long getAccountNumber() {
        return instance.getAccountNumber();
      }
      /**
       * <code>optional sint64 account_number = 2;</code>
       */
      public Builder setAccountNumber(long value) {
        copyOnWrite();
        instance.setAccountNumber(value);
        return this;
      }
      /**
       * <code>optional sint64 account_number = 2;</code>
       */
      public Builder clearAccountNumber() {
        copyOnWrite();
        instance.clearAccountNumber();
        return this;
      }

      /**
       * <code>optional sint64 sequence = 3;</code>
       */
      public long getSequence() {
        return instance.getSequence();
      }
      /**
       * <code>optional sint64 sequence = 3;</code>
       */
      public Builder setSequence(long value) {
        copyOnWrite();
        instance.setSequence(value);
        return this;
      }
      /**
       * <code>optional sint64 sequence = 3;</code>
       */
      public Builder clearSequence() {
        copyOnWrite();
        instance.clearSequence();
        return this;
      }

      /**
       * <code>optional sint64 source = 4;</code>
       */
      public long getSource() {
        return instance.getSource();
      }
      /**
       * <code>optional sint64 source = 4;</code>
       */
      public Builder setSource(long value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <code>optional sint64 source = 4;</code>
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }

      /**
       * <code>optional string memo = 5;</code>
       */
      public java.lang.String getMemo() {
        return instance.getMemo();
      }
      /**
       * <code>optional string memo = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMemoBytes() {
        return instance.getMemoBytes();
      }
      /**
       * <code>optional string memo = 5;</code>
       */
      public Builder setMemo(
          java.lang.String value) {
        copyOnWrite();
        instance.setMemo(value);
        return this;
      }
      /**
       * <code>optional string memo = 5;</code>
       */
      public Builder clearMemo() {
        copyOnWrite();
        instance.clearMemo();
        return this;
      }
      /**
       * <code>optional string memo = 5;</code>
       */
      public Builder setMemoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMemoBytes(value);
        return this;
      }

      /**
       * <code>optional bytes private_key = 6;</code>
       */
      public com.google.protobuf.ByteString getPrivateKey() {
        return instance.getPrivateKey();
      }
      /**
       * <code>optional bytes private_key = 6;</code>
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(value);
        return this;
      }
      /**
       * <code>optional bytes private_key = 6;</code>
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }

      /**
       * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder getTradeOrder() {
        return instance.getTradeOrder();
      }
      /**
       * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
       */
      public Builder setTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder value) {
        copyOnWrite();
        instance.setTradeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
       */
      public Builder setTradeOrder(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setTradeOrder(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
       */
      public Builder mergeTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder value) {
        copyOnWrite();
        instance.mergeTradeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTradeOrder trade_order = 7;</code>
       */
      public Builder clearTradeOrder() {
        copyOnWrite();
        instance.clearTradeOrder();
        return this;
      }

      /**
       * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder getCancelTradeOrder() {
        return instance.getCancelTradeOrder();
      }
      /**
       * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
       */
      public Builder setCancelTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder value) {
        copyOnWrite();
        instance.setCancelTradeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
       */
      public Builder setCancelTradeOrder(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setCancelTradeOrder(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
       */
      public Builder mergeCancelTradeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder value) {
        copyOnWrite();
        instance.mergeCancelTradeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceCancelTradeOrder cancel_trade_order = 8;</code>
       */
      public Builder clearCancelTradeOrder() {
        copyOnWrite();
        instance.clearCancelTradeOrder();
        return this;
      }

      /**
       * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder getSendOrder() {
        return instance.getSendOrder();
      }
      /**
       * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
       */
      public Builder setSendOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder value) {
        copyOnWrite();
        instance.setSendOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
       */
      public Builder setSendOrder(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setSendOrder(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
       */
      public Builder mergeSendOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder value) {
        copyOnWrite();
        instance.mergeSendOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceSendOrder send_order = 9;</code>
       */
      public Builder clearSendOrder() {
        copyOnWrite();
        instance.clearSendOrder();
        return this;
      }

      /**
       * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder getFreezeOrder() {
        return instance.getFreezeOrder();
      }
      /**
       * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
       */
      public Builder setFreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder value) {
        copyOnWrite();
        instance.setFreezeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
       */
      public Builder setFreezeOrder(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setFreezeOrder(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
       */
      public Builder mergeFreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder value) {
        copyOnWrite();
        instance.mergeFreezeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTokenFreezeOrder freeze_order = 10;</code>
       */
      public Builder clearFreezeOrder() {
        copyOnWrite();
        instance.clearFreezeOrder();
        return this;
      }

      /**
       * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder getUnfreezeOrder() {
        return instance.getUnfreezeOrder();
      }
      /**
       * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
       */
      public Builder setUnfreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder value) {
        copyOnWrite();
        instance.setUnfreezeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
       */
      public Builder setUnfreezeOrder(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.Builder builderForValue) {
        copyOnWrite();
        instance.setUnfreezeOrder(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
       */
      public Builder mergeUnfreezeOrder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder value) {
        copyOnWrite();
        instance.mergeUnfreezeOrder(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BinanceTokenUnfreezeOrder unfreeze_order = 11;</code>
       */
      public Builder clearUnfreezeOrder() {
        copyOnWrite();
        instance.clearUnfreezeOrder();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BinanceSigningInput)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput) arg1;
          chainId_ = visitor.visitString(!chainId_.isEmpty(), chainId_,
              !other.chainId_.isEmpty(), other.chainId_);
          accountNumber_ = visitor.visitLong(accountNumber_ != 0L, accountNumber_,
              other.accountNumber_ != 0L, other.accountNumber_);
          sequence_ = visitor.visitLong(sequence_ != 0L, sequence_,
              other.sequence_ != 0L, other.sequence_);
          source_ = visitor.visitLong(source_ != 0L, source_,
              other.source_ != 0L, other.source_);
          memo_ = visitor.visitString(!memo_.isEmpty(), memo_,
              !other.memo_.isEmpty(), other.memo_);
          privateKey_ = visitor.visitByteString(privateKey_ != com.google.protobuf.ByteString.EMPTY, privateKey_,
              other.privateKey_ != com.google.protobuf.ByteString.EMPTY, other.privateKey_);
          switch (other.getOrderOneofCase()) {
            case TRADE_ORDER: {
              orderOneof_ = visitor.visitOneofMessage(
                  orderOneofCase_ == 7,
                  orderOneof_,
                  other.orderOneof_);
              break;
            }
            case CANCEL_TRADE_ORDER: {
              orderOneof_ = visitor.visitOneofMessage(
                  orderOneofCase_ == 8,
                  orderOneof_,
                  other.orderOneof_);
              break;
            }
            case SEND_ORDER: {
              orderOneof_ = visitor.visitOneofMessage(
                  orderOneofCase_ == 9,
                  orderOneof_,
                  other.orderOneof_);
              break;
            }
            case FREEZE_ORDER: {
              orderOneof_ = visitor.visitOneofMessage(
                  orderOneofCase_ == 10,
                  orderOneof_,
                  other.orderOneof_);
              break;
            }
            case UNFREEZE_ORDER: {
              orderOneof_ = visitor.visitOneofMessage(
                  orderOneofCase_ == 11,
                  orderOneof_,
                  other.orderOneof_);
              break;
            }
            case ORDERONEOF_NOT_SET: {
              visitor.visitOneofNotSet(orderOneofCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.orderOneofCase_ != 0) {
              orderOneofCase_ = other.orderOneofCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  chainId_ = s;
                  break;
                }
                case 16: {

                  accountNumber_ = input.readSInt64();
                  break;
                }
                case 24: {

                  sequence_ = input.readSInt64();
                  break;
                }
                case 32: {

                  source_ = input.readSInt64();
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  memo_ = s;
                  break;
                }
                case 50: {

                  privateKey_ = input.readBytes();
                  break;
                }
                case 58: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.Builder subBuilder = null;
                  if (orderOneofCase_ == 7) {
                    subBuilder = ((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) orderOneof_).toBuilder();
                  }
                  orderOneof_ =
                       input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTradeOrder) orderOneof_);
                    orderOneof_ = subBuilder.buildPartial();
                  }
                  orderOneofCase_ = 7;
                  break;
                }
                case 66: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.Builder subBuilder = null;
                  if (orderOneofCase_ == 8) {
                    subBuilder = ((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) orderOneof_).toBuilder();
                  }
                  orderOneof_ =
                       input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceCancelTradeOrder) orderOneof_);
                    orderOneof_ = subBuilder.buildPartial();
                  }
                  orderOneofCase_ = 8;
                  break;
                }
                case 74: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.Builder subBuilder = null;
                  if (orderOneofCase_ == 9) {
                    subBuilder = ((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) orderOneof_).toBuilder();
                  }
                  orderOneof_ =
                       input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSendOrder) orderOneof_);
                    orderOneof_ = subBuilder.buildPartial();
                  }
                  orderOneofCase_ = 9;
                  break;
                }
                case 82: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.Builder subBuilder = null;
                  if (orderOneofCase_ == 10) {
                    subBuilder = ((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) orderOneof_).toBuilder();
                  }
                  orderOneof_ =
                       input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenFreezeOrder) orderOneof_);
                    orderOneof_ = subBuilder.buildPartial();
                  }
                  orderOneofCase_ = 10;
                  break;
                }
                case 90: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.Builder subBuilder = null;
                  if (orderOneofCase_ == 11) {
                    subBuilder = ((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) orderOneof_).toBuilder();
                  }
                  orderOneof_ =
                       input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceTokenUnfreezeOrder) orderOneof_);
                    orderOneof_ = subBuilder.buildPartial();
                  }
                  orderOneofCase_ = 11;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BinanceSigningInput)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BinanceSigningInput();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BinanceSigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BinanceSigningInput> PARSER;

    public static com.google.protobuf.Parser<BinanceSigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
