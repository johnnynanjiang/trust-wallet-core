<% method = locals[:method] -%>
<% inout_data = method.parameters.last -%>
<%=  render('jni/static_method_returning_string_prototype.erb', { method: method }) %> {
    currentEnv = env;
<%   method.parameters.each do |param| -%>
<%     if param.type.is_struct -%>
<%=      render('jni/struct_access.erb', { param: param }) -%>
<%     elsif param.type.is_class -%>
<%=      render('jni/class_access.erb', { param: param }) -%>
<%     end -%>
<%   end -%>
    jstring result = (jstring) TW<%= entity.name %><%= method.name %>(<%= JNIHelper.arguments(method.parameters) %>);
<%   method.parameters.select{ |p| p.type.is_struct }.each do |param| -%>
    (*env)->ReleaseByteArrayElements(env, <%= param.name %>BytesArray, <%= param.name %>BytesBuffer, JNI_ABORT);
<%   end -%>
    return result;
}
