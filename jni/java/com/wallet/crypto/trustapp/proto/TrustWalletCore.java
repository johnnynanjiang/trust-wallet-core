// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrustWalletCore.proto

package com.wallet.crypto.trustapp.proto;

public final class TrustWalletCore {
  private TrustWalletCore() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface BitcoinOutPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BitcoinOutPoint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bytes hash = 1;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <code>optional uint32 index = 2;</code>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code TW.proto.BitcoinOutPoint}
   */
  public  static final class BitcoinOutPoint extends
      com.google.protobuf.GeneratedMessageLite<
          BitcoinOutPoint, BitcoinOutPoint.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BitcoinOutPoint)
      BitcoinOutPointOrBuilder {
    private BitcoinOutPoint() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString hash_;
    /**
     * <code>optional bytes hash = 1;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }
    /**
     * <code>optional bytes hash = 1;</code>
     */
    private void setHash(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hash_ = value;
    }
    /**
     * <code>optional bytes hash = 1;</code>
     */
    private void clearHash() {
      
      hash_ = getDefaultInstance().getHash();
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <code>optional uint32 index = 2;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <code>optional uint32 index = 2;</code>
     */
    private void setIndex(int value) {
      
      index_ = value;
    }
    /**
     * <code>optional uint32 index = 2;</code>
     */
    private void clearIndex() {
      
      index_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!hash_.isEmpty()) {
        output.writeBytes(1, hash_);
      }
      if (index_ != 0) {
        output.writeUInt32(2, index_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, hash_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BitcoinOutPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BitcoinOutPoint)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPointOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bytes hash = 1;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return instance.getHash();
      }
      /**
       * <code>optional bytes hash = 1;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setHash(value);
        return this;
      }
      /**
       * <code>optional bytes hash = 1;</code>
       */
      public Builder clearHash() {
        copyOnWrite();
        instance.clearHash();
        return this;
      }

      /**
       * <code>optional uint32 index = 2;</code>
       */
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <code>optional uint32 index = 2;</code>
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <code>optional uint32 index = 2;</code>
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BitcoinOutPoint)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint) arg1;
          hash_ = visitor.visitByteString(hash_ != com.google.protobuf.ByteString.EMPTY, hash_,
              other.hash_ != com.google.protobuf.ByteString.EMPTY, other.hash_);
          index_ = visitor.visitInt(index_ != 0, index_,
              other.index_ != 0, other.index_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {

                  hash_ = input.readBytes();
                  break;
                }
                case 16: {

                  index_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BitcoinOutPoint)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BitcoinOutPoint();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BitcoinOutPoint> PARSER;

    public static com.google.protobuf.Parser<BitcoinOutPoint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BitcoinUnspentTransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BitcoinUnspentTransaction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    boolean hasOutPoint();
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getOutPoint();

    /**
     * <code>optional bytes script = 2;</code>
     */
    com.google.protobuf.ByteString getScript();

    /**
     * <code>optional int64 amount = 3;</code>
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code TW.proto.BitcoinUnspentTransaction}
   */
  public  static final class BitcoinUnspentTransaction extends
      com.google.protobuf.GeneratedMessageLite<
          BitcoinUnspentTransaction, BitcoinUnspentTransaction.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BitcoinUnspentTransaction)
      BitcoinUnspentTransactionOrBuilder {
    private BitcoinUnspentTransaction() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int OUT_POINT_FIELD_NUMBER = 1;
    private com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint outPoint_;
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    public boolean hasOutPoint() {
      return outPoint_ != null;
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getOutPoint() {
      return outPoint_ == null ? com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.getDefaultInstance() : outPoint_;
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void setOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      outPoint_ = value;
      
      }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void setOutPoint(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.Builder builderForValue) {
      outPoint_ = builderForValue.build();
      
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void mergeOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
      if (outPoint_ != null &&
          outPoint_ != com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.getDefaultInstance()) {
        outPoint_ =
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.newBuilder(outPoint_).mergeFrom(value).buildPartial();
      } else {
        outPoint_ = value;
      }
      
    }
    /**
     * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
     */
    private void clearOutPoint() {  outPoint_ = null;
      
    }

    public static final int SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString script_;
    /**
     * <code>optional bytes script = 2;</code>
     */
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }
    /**
     * <code>optional bytes script = 2;</code>
     */
    private void setScript(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      script_ = value;
    }
    /**
     * <code>optional bytes script = 2;</code>
     */
    private void clearScript() {
      
      script_ = getDefaultInstance().getScript();
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <code>optional int64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }
    /**
     * <code>optional int64 amount = 3;</code>
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <code>optional int64 amount = 3;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (outPoint_ != null) {
        output.writeMessage(1, getOutPoint());
      }
      if (!script_.isEmpty()) {
        output.writeBytes(2, script_);
      }
      if (amount_ != 0L) {
        output.writeInt64(3, amount_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (outPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOutPoint());
      }
      if (!script_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, script_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, amount_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code TW.proto.BitcoinUnspentTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BitcoinUnspentTransaction)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransactionOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public boolean hasOutPoint() {
        return instance.hasOutPoint();
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint getOutPoint() {
        return instance.getOutPoint();
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
        copyOnWrite();
        instance.setOutPoint(value);
        return this;
        }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setOutPoint(builderForValue);
        return this;
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder mergeOutPoint(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint value) {
        copyOnWrite();
        instance.mergeOutPoint(value);
        return this;
      }
      /**
       * <code>optional .TW.proto.BitcoinOutPoint out_point = 1;</code>
       */
      public Builder clearOutPoint() {  copyOnWrite();
        instance.clearOutPoint();
        return this;
      }

      /**
       * <code>optional bytes script = 2;</code>
       */
      public com.google.protobuf.ByteString getScript() {
        return instance.getScript();
      }
      /**
       * <code>optional bytes script = 2;</code>
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setScript(value);
        return this;
      }
      /**
       * <code>optional bytes script = 2;</code>
       */
      public Builder clearScript() {
        copyOnWrite();
        instance.clearScript();
        return this;
      }

      /**
       * <code>optional int64 amount = 3;</code>
       */
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BitcoinUnspentTransaction)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction) arg1;
          outPoint_ = visitor.visitMessage(outPoint_, other.outPoint_);
          script_ = visitor.visitByteString(script_ != com.google.protobuf.ByteString.EMPTY, script_,
              other.script_ != com.google.protobuf.ByteString.EMPTY, other.script_);
          amount_ = visitor.visitLong(amount_ != 0L, amount_,
              other.amount_ != 0L, other.amount_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.Builder subBuilder = null;
                  if (outPoint_ != null) {
                    subBuilder = outPoint_.toBuilder();
                  }
                  outPoint_ = input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinOutPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(outPoint_);
                    outPoint_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {

                  script_ = input.readBytes();
                  break;
                }
                case 24: {

                  amount_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BitcoinUnspentTransaction)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BitcoinUnspentTransaction();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BitcoinUnspentTransaction> PARSER;

    public static com.google.protobuf.Parser<BitcoinUnspentTransaction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BitcoinSigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.proto.BitcoinSigningInput)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    int getHashType();

    /**
     * <code>optional int64 amount = 2;</code>
     */
    long getAmount();

    /**
     * <code>optional string to_address = 3;</code>
     */
    java.lang.String getToAddress();
    /**
     * <code>optional string to_address = 3;</code>
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <code>optional string change_address = 4;</code>
     */
    java.lang.String getChangeAddress();
    /**
     * <code>optional string change_address = 4;</code>
     */
    com.google.protobuf.ByteString
        getChangeAddressBytes();

    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getPrivateKeyList();
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    int getPrivateKeyCount();
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    com.google.protobuf.ByteString getPrivateKey(int index);

    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    int getScriptsCount();
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    boolean containsScripts(
        java.lang.String key);
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getScripts();
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getScriptsMap();
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    com.google.protobuf.ByteString getScriptsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    com.google.protobuf.ByteString getScriptsOrThrow(
        java.lang.String key);

    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> 
        getUtxoList();
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getUtxo(int index);
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    int getUtxoCount();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.proto.BitcoinSigningInput}
   */
  public  static final class BitcoinSigningInput extends
      com.google.protobuf.GeneratedMessageLite<
          BitcoinSigningInput, BitcoinSigningInput.Builder> implements
      // @@protoc_insertion_point(message_implements:TW.proto.BitcoinSigningInput)
      BitcoinSigningInputOrBuilder {
    private BitcoinSigningInput() {
      toAddress_ = "";
      changeAddress_ = "";
      privateKey_ = emptyProtobufList();
      utxo_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int HASH_TYPE_FIELD_NUMBER = 1;
    private int hashType_;
    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    public int getHashType() {
      return hashType_;
    }
    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    private void setHashType(int value) {
      
      hashType_ = value;
    }
    /**
     * <code>optional uint32 hash_type = 1;</code>
     */
    private void clearHashType() {
      
      hashType_ = 0;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <code>optional int64 amount = 2;</code>
     */
    public long getAmount() {
      return amount_;
    }
    /**
     * <code>optional int64 amount = 2;</code>
     */
    private void setAmount(long value) {
      
      amount_ = value;
    }
    /**
     * <code>optional int64 amount = 2;</code>
     */
    private void clearAmount() {
      
      amount_ = 0L;
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 3;
    private java.lang.String toAddress_;
    /**
     * <code>optional string to_address = 3;</code>
     */
    public java.lang.String getToAddress() {
      return toAddress_;
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(toAddress_);
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    private void setToAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      toAddress_ = value;
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    private void clearToAddress() {
      
      toAddress_ = getDefaultInstance().getToAddress();
    }
    /**
     * <code>optional string to_address = 3;</code>
     */
    private void setToAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      toAddress_ = value.toStringUtf8();
    }

    public static final int CHANGE_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.String changeAddress_;
    /**
     * <code>optional string change_address = 4;</code>
     */
    public java.lang.String getChangeAddress() {
      return changeAddress_;
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    public com.google.protobuf.ByteString
        getChangeAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(changeAddress_);
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    private void setChangeAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      changeAddress_ = value;
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    private void clearChangeAddress() {
      
      changeAddress_ = getDefaultInstance().getChangeAddress();
    }
    /**
     * <code>optional string change_address = 4;</code>
     */
    private void setChangeAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      changeAddress_ = value.toStringUtf8();
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> privateKey_;
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPrivateKeyList() {
      return privateKey_;
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    public int getPrivateKeyCount() {
      return privateKey_.size();
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    public com.google.protobuf.ByteString getPrivateKey(int index) {
      return privateKey_.get(index);
    }
    private void ensurePrivateKeyIsMutable() {
      if (!privateKey_.isModifiable()) {
        privateKey_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(privateKey_);
       }
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void setPrivateKey(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePrivateKeyIsMutable();
      privateKey_.set(index, value);
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void addPrivateKey(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePrivateKeyIsMutable();
      privateKey_.add(value);
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void addAllPrivateKey(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensurePrivateKeyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, privateKey_);
    }
    /**
     * <code>repeated bytes private_key = 10;</code>
     */
    private void clearPrivateKey() {
      privateKey_ = emptyProtobufList();
    }

    public static final int SCRIPTS_FIELD_NUMBER = 11;
    private static final class ScriptsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, com.google.protobuf.ByteString> scripts_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, com.google.protobuf.ByteString>
    internalGetScripts() {
      return scripts_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, com.google.protobuf.ByteString>
    internalGetMutableScripts() {
      if (!scripts_.isMutable()) {
        scripts_ = scripts_.mutableCopy();
      }
      return scripts_;
    }

    public int getScriptsCount() {
      return internalGetScripts().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public boolean containsScripts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetScripts().containsKey(key);
    }
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScripts() {
      return getScriptsMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScriptsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetScripts());
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public com.google.protobuf.ByteString getScriptsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetScripts();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public com.google.protobuf.ByteString getScriptsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetScripts();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    private java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getMutableScriptsMap() {
      return internalGetMutableScripts();
    }

    public static final int UTXO_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.ProtobufList<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> utxo_;
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> getUtxoList() {
      return utxo_;
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public java.util.List<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransactionOrBuilder> 
        getUtxoOrBuilderList() {
      return utxo_;
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public int getUtxoCount() {
      return utxo_.size();
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getUtxo(int index) {
      return utxo_.get(index);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransactionOrBuilder getUtxoOrBuilder(
        int index) {
      return utxo_.get(index);
    }
    private void ensureUtxoIsMutable() {
      if (!utxo_.isModifiable()) {
        utxo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(utxo_);
       }
    }

    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void setUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUtxoIsMutable();
      utxo_.set(index, value);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void setUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
      ensureUtxoIsMutable();
      utxo_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUtxoIsMutable();
      utxo_.add(value);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUtxoIsMutable();
      utxo_.add(index, value);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
      ensureUtxoIsMutable();
      utxo_.add(builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addUtxo(
        int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
      ensureUtxoIsMutable();
      utxo_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void addAllUtxo(
        java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> values) {
      ensureUtxoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, utxo_);
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void clearUtxo() {
      utxo_ = emptyProtobufList();
    }
    /**
     * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
     */
    private void removeUtxo(int index) {
      ensureUtxoIsMutable();
      utxo_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hashType_ != 0) {
        output.writeUInt32(1, hashType_);
      }
      if (amount_ != 0L) {
        output.writeInt64(2, amount_);
      }
      if (!toAddress_.isEmpty()) {
        output.writeString(3, getToAddress());
      }
      if (!changeAddress_.isEmpty()) {
        output.writeString(4, getChangeAddress());
      }
      for (int i = 0; i < privateKey_.size(); i++) {
        output.writeBytes(10, privateKey_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetScripts().entrySet()) {
        ScriptsDefaultEntryHolder.defaultEntry.serializeTo(
            output, 11, entry.getKey(), entry.getValue());
      }
      for (int i = 0; i < utxo_.size(); i++) {
        output.writeMessage(12, utxo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hashType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, hashType_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, amount_);
      }
      if (!toAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getToAddress());
      }
      if (!changeAddress_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getChangeAddress());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < privateKey_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(privateKey_.get(i));
        }
        size += dataSize;
        size += 1 * getPrivateKeyList().size();
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetScripts().entrySet()) {
        size += ScriptsDefaultEntryHolder.defaultEntry.computeMessageSize(
          11, entry.getKey(), entry.getValue());
      }
      for (int i = 0; i < utxo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, utxo_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.proto.BitcoinSigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput, Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.proto.BitcoinSigningInput)
        com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInputOrBuilder {
      // Construct using com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 hash_type = 1;</code>
       */
      public int getHashType() {
        return instance.getHashType();
      }
      /**
       * <code>optional uint32 hash_type = 1;</code>
       */
      public Builder setHashType(int value) {
        copyOnWrite();
        instance.setHashType(value);
        return this;
      }
      /**
       * <code>optional uint32 hash_type = 1;</code>
       */
      public Builder clearHashType() {
        copyOnWrite();
        instance.clearHashType();
        return this;
      }

      /**
       * <code>optional int64 amount = 2;</code>
       */
      public long getAmount() {
        return instance.getAmount();
      }
      /**
       * <code>optional int64 amount = 2;</code>
       */
      public Builder setAmount(long value) {
        copyOnWrite();
        instance.setAmount(value);
        return this;
      }
      /**
       * <code>optional int64 amount = 2;</code>
       */
      public Builder clearAmount() {
        copyOnWrite();
        instance.clearAmount();
        return this;
      }

      /**
       * <code>optional string to_address = 3;</code>
       */
      public java.lang.String getToAddress() {
        return instance.getToAddress();
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        return instance.getToAddressBytes();
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public Builder setToAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setToAddress(value);
        return this;
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public Builder clearToAddress() {
        copyOnWrite();
        instance.clearToAddress();
        return this;
      }
      /**
       * <code>optional string to_address = 3;</code>
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setToAddressBytes(value);
        return this;
      }

      /**
       * <code>optional string change_address = 4;</code>
       */
      public java.lang.String getChangeAddress() {
        return instance.getChangeAddress();
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public com.google.protobuf.ByteString
          getChangeAddressBytes() {
        return instance.getChangeAddressBytes();
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public Builder setChangeAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setChangeAddress(value);
        return this;
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public Builder clearChangeAddress() {
        copyOnWrite();
        instance.clearChangeAddress();
        return this;
      }
      /**
       * <code>optional string change_address = 4;</code>
       */
      public Builder setChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChangeAddressBytes(value);
        return this;
      }

      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPrivateKeyList() {
        return java.util.Collections.unmodifiableList(
            instance.getPrivateKeyList());
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public int getPrivateKeyCount() {
        return instance.getPrivateKeyCount();
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public com.google.protobuf.ByteString getPrivateKey(int index) {
        return instance.getPrivateKey(index);
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder setPrivateKey(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrivateKey(index, value);
        return this;
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder addPrivateKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addPrivateKey(value);
        return this;
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder addAllPrivateKey(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllPrivateKey(values);
        return this;
      }
      /**
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder clearPrivateKey() {
        copyOnWrite();
        instance.clearPrivateKey();
        return this;
      }


      public int getScriptsCount() {
        return instance.getScriptsMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public boolean containsScripts(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return instance.getScriptsMap().containsKey(key);
      }

      public Builder clearScripts() {
        copyOnWrite();
        instance.getMutableScriptsMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public Builder removeScripts(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableScriptsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getScriptsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScripts() {
        return getScriptsMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScriptsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getScriptsMap());
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public com.google.protobuf.ByteString getScriptsOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            instance.getScriptsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public com.google.protobuf.ByteString getScriptsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            instance.getScriptsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public Builder putScripts(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableScriptsMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public Builder putAllScripts(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.getMutableScriptsMap().putAll(values);
        return this;
      }

      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public java.util.List<com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> getUtxoList() {
        return java.util.Collections.unmodifiableList(
            instance.getUtxoList());
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public int getUtxoCount() {
        return instance.getUtxoCount();
      }/**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction getUtxo(int index) {
        return instance.getUtxo(index);
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder setUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
        copyOnWrite();
        instance.setUtxo(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder setUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
        copyOnWrite();
        instance.setUtxo(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
        copyOnWrite();
        instance.addUtxo(value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction value) {
        copyOnWrite();
        instance.addUtxo(index, value);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxo(builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          int index, com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.Builder builderForValue) {
        copyOnWrite();
        instance.addUtxo(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder addAllUtxo(
          java.lang.Iterable<? extends com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction> values) {
        copyOnWrite();
        instance.addAllUtxo(values);
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder clearUtxo() {
        copyOnWrite();
        instance.clearUtxo();
        return this;
      }
      /**
       * <code>repeated .TW.proto.BitcoinUnspentTransaction utxo = 12;</code>
       */
      public Builder removeUtxo(int index) {
        copyOnWrite();
        instance.removeUtxo(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TW.proto.BitcoinSigningInput)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          privateKey_.makeImmutable();
          scripts_.makeImmutable();
          utxo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput other = (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput) arg1;
          hashType_ = visitor.visitInt(hashType_ != 0, hashType_,
              other.hashType_ != 0, other.hashType_);
          amount_ = visitor.visitLong(amount_ != 0L, amount_,
              other.amount_ != 0L, other.amount_);
          toAddress_ = visitor.visitString(!toAddress_.isEmpty(), toAddress_,
              !other.toAddress_.isEmpty(), other.toAddress_);
          changeAddress_ = visitor.visitString(!changeAddress_.isEmpty(), changeAddress_,
              !other.changeAddress_.isEmpty(), other.changeAddress_);
          privateKey_= visitor.visitList(privateKey_, other.privateKey_);
          scripts_ = visitor.visitMap(
              scripts_, other.internalGetScripts());
          utxo_= visitor.visitList(utxo_, other.utxo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  hashType_ = input.readUInt32();
                  break;
                }
                case 16: {

                  amount_ = input.readInt64();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  toAddress_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  changeAddress_ = s;
                  break;
                }
                case 82: {
                  if (!privateKey_.isModifiable()) {
                    privateKey_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(privateKey_);
                  }
                  privateKey_.add(input.readBytes());
                  break;
                }
                case 90: {
                  if (!scripts_.isMutable()) {
                    scripts_ = scripts_.mutableCopy();
                  }
                  ScriptsDefaultEntryHolder.defaultEntry.parseInto(scripts_, input, extensionRegistry);  break;
                }
                case 98: {
                  if (!utxo_.isModifiable()) {
                    utxo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(utxo_);
                  }
                  utxo_.add(
                      input.readMessage(com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinUnspentTransaction.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:TW.proto.BitcoinSigningInput)
    private static final com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BitcoinSigningInput();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wallet.crypto.trustapp.proto.TrustWalletCore.BitcoinSigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BitcoinSigningInput> PARSER;

    public static com.google.protobuf.Parser<BitcoinSigningInput> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
